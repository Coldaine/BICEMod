
#------------------------------ diplo_action_acceptance, diplo_action_desire
# improve_relation #befriend ?
# lend_lease
# request_lend_lease
# guarantee
# non_aggression_pact 			#befriend-antagonize 
# military_access				#befriend-antagonize 
# offer_military_access
# docking_rights				#befriend-antagonize 
# offer_docking_rights
# join_faction					#alliance-antagonize 
# offer_join_faction
# justifying_war_goal
# declare_war
# join_allies
# call_allies
# send_expeditionary_force
# return_expeditionary_forces
# request_expeditionary_forces

# asking_foreign_garrison
# request_foreign_manpower
# cancel_foreign_manpower

# request_access_to_licence_production	#befriend-antagonize
# cancel_licensed_production
# market_access_rights

ai_static_diplomacy_strategies = {
	# define faction -> faction diplomatic ai behaviour here
	# strategies get applied for every country of ROOT faction
	# towards every country of the *_target tag faction
	# this strictly only works if both ROOT and target are in faction
	
	# preset alliance leaders. if faction leader changes it will automatically update
	add_to_array = { global.ai_faction_diplo_leader = GER }
	add_to_array = { global.ai_faction_diplo_leader = ENG }
	add_to_array = { global.ai_faction_diplo_leader = JAP }
	add_to_array = { global.ai_faction_diplo_leader = CHI }
	add_to_array = { global.ai_faction_diplo_leader = SOV }
	
	GER = {
		add_to_array = { ai_faction_desire_target = JAP }
		add_to_array = { ai_faction_desire_action = token:military_access }
		add_to_array = { ai_faction_desire_value = -5000 }
		
		add_to_array = { ai_faction_desire_target = JAP }
		add_to_array = { ai_faction_desire_action = token:docking_rights }
		add_to_array = { ai_faction_desire_value = -5000 }
		
		#add_to_array = { ai_faction_desire_target = JAP }
		#add_to_array = { ai_faction_desire_action = token:embargo }
		#add_to_array = { ai_faction_desire_value = -5000 }
		
		add_to_array = { ai_faction_desire_target = SOV }
		add_to_array = { ai_faction_desire_action = token:military_access }
		add_to_array = { ai_faction_desire_value = -5000 }
		
		add_to_array = { ai_faction_desire_target = SOV }
		add_to_array = { ai_faction_desire_action = token:docking_rights }
		add_to_array = { ai_faction_desire_value = -5000 }
		
		add_to_array = { ai_faction_acceptance_target = SOV }
		add_to_array = { ai_faction_acceptance_action = token:market_access_rights }
		add_to_array = { ai_faction_acceptance_value = -500 }
	}
	
	ENG = {
		add_to_array = { ai_faction_desire_target = SOV }
		add_to_array = { ai_faction_desire_action = token:military_access }
		add_to_array = { ai_faction_desire_value = -5000 }
		
		add_to_array = { ai_faction_desire_target = SOV }
		add_to_array = { ai_faction_desire_action = token:docking_rights }
		add_to_array = { ai_faction_desire_value = -5000 }
		
		add_to_array = { ai_faction_desire_target = CHI }
		add_to_array = { ai_faction_desire_action = token:military_access }
		add_to_array = { ai_faction_desire_value = -5000 }
		
		add_to_array = { ai_faction_desire_target = CHI }
		add_to_array = { ai_faction_desire_action = token:docking_rights }
		add_to_array = { ai_faction_desire_value = -5000 }
	}
	
	JAP = {
		add_to_array = { ai_faction_desire_target = GER }
		add_to_array = { ai_faction_desire_action = token:military_access }
		add_to_array = { ai_faction_desire_value = -5000 }
		
		add_to_array = { ai_faction_desire_target = GER }
		add_to_array = { ai_faction_desire_action = token:docking_rights }
		add_to_array = { ai_faction_desire_value = -5000 }
		
		#add_to_array = { ai_faction_desire_target = GER }
		#add_to_array = { ai_faction_desire_action = token:embargo }
		#add_to_array = { ai_faction_desire_value = -5000 }
	}
	
	CHI = {
		add_to_array = { ai_faction_acceptance_target = ENG }
		add_to_array = { ai_faction_acceptance_action = token:military_access }
		add_to_array = { ai_faction_acceptance_value = -500 }
		
		add_to_array = { ai_faction_acceptance_target = ENG }
		add_to_array = { ai_faction_acceptance_action = token:docking_rights }
		add_to_array = { ai_faction_acceptance_value = -500 }
		
		add_to_array = { ai_faction_acceptance_target = SOV }
		add_to_array = { ai_faction_acceptance_action = token:military_access }
		add_to_array = { ai_faction_acceptance_value = -500 }
		
		add_to_array = { ai_faction_acceptance_target = SOV }
		add_to_array = { ai_faction_acceptance_action = token:docking_rights }
		add_to_array = { ai_faction_acceptance_value = -500 }
		
		add_to_array = { ai_faction_desire_target = ENG }
		add_to_array = { ai_faction_desire_action = token:docking_rights }
		add_to_array = { ai_faction_desire_value = -5000 }
		
	}
	
	SOV = {
		add_to_array = { ai_faction_acceptance_target = ENG }
		add_to_array = { ai_faction_acceptance_action = token:military_access }
		add_to_array = { ai_faction_acceptance_value = -500 }
		
		add_to_array = { ai_faction_acceptance_target = ENG }
		add_to_array = { ai_faction_acceptance_action = token:docking_rights }
		add_to_array = { ai_faction_acceptance_value = -500 }
		
		add_to_array = { ai_faction_acceptance_target = GER }
		add_to_array = { ai_faction_acceptance_action = token:military_access }
		add_to_array = { ai_faction_acceptance_value = -250 }
		
		add_to_array = { ai_faction_acceptance_target = GER }
		add_to_array = { ai_faction_acceptance_action = token:docking_rights }
		add_to_array = { ai_faction_acceptance_value = -250 }
		
		add_to_array = { ai_faction_acceptance_target = GER }
		add_to_array = { ai_faction_acceptance_action = token:market_access_rights }
		add_to_array = { ai_faction_acceptance_value = -500 }
	}
}

ai_update_on_joining_faction = {
	if = {
		limit = {
			NOT = { check_variable = { leading_country = joining_country } }
		}
		var:leading_country = {
			var:joining_country = {
				for_each_scope_loop = {
					array = PREV.faction_members
					
					if = {
						limit = {
							NOT = { tag = var:joining_country }
						}
							
						var:joining_country = {
							diplomatic_relation = {
								country = PREV
								relation = military_access
								active = no
							}
							diplomatic_relation = {
								country = PREV
								relation = docking_rights
								active = no
							}
						}
						
						diplomatic_relation = {
							country = PREV
							relation = military_access
							active = no
						}
						diplomatic_relation = {
							country = PREV
							relation = docking_rights
							active = no
						}
					}
				}
			}
		}
	}
	
	var:joining_country = { 
		set_variable = { ai_faction_leader_id = leading_country }
	}
	#log = "========= AI DIPLO: [?joining_country.GetTag] HAS JOINED [?leading_country.GetTag] faction"
	if = {
		limit = {
			is_in_array = { global.ai_faction_diplo_leader = leading_country }
		}
		
		## apply faction diplo so it aligns with the "leading_country"
		var:leading_country = {
			
			for_each_loop = {
				array = ai_faction_desire_target
				
				set_temp_variable = { action = ai_faction_desire_action^i }
				set_temp_variable = { strategy_value = ai_faction_desire_value^i }
				
				var:v = {
					if = {
						limit = {
							is_in_faction = yes
						}
						#log = "  ---> ai_faction_desire_target: [?v.GetTag] | action: [?action.GetTokenKey] | value: [?strategy_value]"
							
						for_each_scope_loop = {
							array = faction_members
								
							var:joining_country = {
								
								#log = "      -[This.GetTag] | APPLY strategy towards [?Prev.GetTag]"
								
								meta_effect = {
									text = {
										add_ai_strategy = {
											type = diplo_action_desire
											id = [TAG]
											target = [ACTION]
											value = [VALUE]
										}
									}
									TAG = "[Prev.GetTag]"
									ACTION = "[?action.GetTokenKey]"
									VALUE = "[?strategy_value]"
								}
							}
						}
					}
				}
			}
			
			for_each_loop = {
				array = ai_faction_acceptance_target
				
				set_temp_variable = { action = ai_faction_acceptance_action^i }
				set_temp_variable = { strategy_value = ai_faction_acceptance_value^i }
				
				var:v = {
					if = {
						limit = {
							is_in_faction = yes
						}
						#log = "  ---> ai_faction_acceptance_target: [?v.GetTag] | action: [?action.GetTokenKey] | value: [?strategy_value]"
							
						for_each_scope_loop = {
							array = faction_members
								
							var:joining_country = {
								
								#log = "      -[This.GetTag] | APPLY strategy towards [?Prev.GetTag]"
								
								meta_effect = {
									text = {
										add_ai_strategy = {
											type = diplo_action_acceptance
											id = [TAG]
											target = [ACTION]
											value = [VALUE]
										}
									}
									TAG = "[Prev.GetTag]"
									ACTION = "[?action.GetTokenKey]"
									VALUE = "[?strategy_value]"
								}
							}
						}
					}
				}
			}
			
		}
		
		#log = " "
		#log = "==== OTHER FACTIONS UPDATING STRATEGY ===="
		
		## apply faction diplo from other factions towards "joining_country"
		for_each_scope_loop = {
			array = global.ai_faction_diplo_leader
			
			if = {
				limit = {
					is_in_faction = yes
					NOT = { tag = var:leading_country }
				}
				#log = "[This.GetTag] | update diplo towards [?joining_country.GetTag] with leader [?leading_country.GetTag]"
				
				if = {
					limit = { 
						is_in_array = { ai_faction_desire_target = leading_country }
					}
						
					for_each_loop = {
						array = ai_faction_desire_target
					
						if = {
							limit = {
								check_variable = { v = leading_country }
							}
							set_temp_variable = { action = ai_faction_desire_action^i }
							set_temp_variable = { strategy_value = ai_faction_desire_value^i }
							
							#log = "  ---> ai_faction_desire_target: [?v.GetTag] | action: [?action.GetTokenKey] | value: [?strategy_value]"
							for_each_scope_loop = {
								array = faction_members
									
								#log = "      -[This.GetTag] | APPLY strategy towards [?Prev.GetTag]"
								
								meta_effect = {
									text = {
										add_ai_strategy = {
											type = diplo_action_desire
											id = [TAG]
											target = [ACTION]
											value = [VALUE]
										}
									}
									TAG = "[?joining_country.GetTag]"
									ACTION = "[?action.GetTokenKey]"
									VALUE = "[?strategy_value]"
								}
								
							}
						}
					}
				}

				if = {
					limit = { 
						is_in_array = { ai_faction_acceptance_target = leading_country }
					}
							
					for_each_loop = {
						array = ai_faction_acceptance_target
					
						if = {
							limit = {
								check_variable = { v = leading_country }
							}
							set_temp_variable = { action = ai_faction_acceptance_action^i }
							set_temp_variable = { strategy_value = ai_faction_acceptance_value^i }
							
							#log = "  ---> ai_faction_acceptance_target: [?v.GetTag] | action: [?action.GetTokenKey] | value: [?strategy_value]"
							for_each_scope_loop = {
								array = faction_members
									
								#log = "      -[This.GetTag] | APPLY strategy towards [?Prev.GetTag]"
								
								meta_effect = {
									text = {
										add_ai_strategy = {
											type = diplo_action_acceptance
											id = [TAG]
											target = [ACTION]
											value = [VALUE]
										}
									}
									TAG = "[?joining_country.GetTag]"
									ACTION = "[?action.GetTokenKey]"
									VALUE = "[?strategy_value]"
								}
								
							}
						}
					}
				}

			}
		}
		#log = " "
	}
		
}

ai_update_on_leaving_faction = {
	var:leaving_country = { 
		clear_variable = ai_faction_leader_id
	}
	
	#log = "========= AI DIPLO: [?leaving_country.GetTag] LEAVES [?leading_country.GetTag] faction"
	if = {
		limit = {
			is_in_array = { global.ai_faction_diplo_leader = leading_country }
		}
		
		var:leading_country = {
			
			for_each_loop = {
				array = ai_faction_desire_target
				
				set_temp_variable = { action = ai_faction_desire_action^i }
				set_temp_variable = { strategy_value = ai_faction_desire_value^i }
				multiply_temp_variable = { strategy_value = -1 }
				
				var:v = {
					if = {
						limit = {
							is_in_faction = yes
						}
						#log = "  ---> ai_faction_desire_target: [?v.GetTag] | action: [?action.GetTokenKey] | value: [?strategy_value]"
							
						for_each_scope_loop = {
							array = faction_members
								
							var:leaving_country = {
								
								#log = "      -[This.GetTag] | APPLY (to offset) strategy towards [?Prev.GetTag]"
								meta_effect = {
									text = {
										add_ai_strategy = {
											type = diplo_action_desire
											id = [TAG]
											target = [ACTION]
											value = [VALUE]
										}
									}
									TAG = "[Prev.GetTag]"
									ACTION = "[?action.GetTokenKey]"
									VALUE = "[?strategy_value]"
								}
							}
						}
					}
				}
			}
			
			for_each_loop = {
				array = ai_faction_acceptance_target
				
				set_temp_variable = { action = ai_faction_acceptance_action^i }
				set_temp_variable = { strategy_value = ai_faction_acceptance_value^i }
				multiply_temp_variable = { strategy_value = -1 }
				
				var:v = {
					if = {
						limit = {
							is_in_faction = yes
						}
						#log = "  ---> ai_faction_acceptance_target: [?v.GetTag] | action: [?action.GetTokenKey] | value: [?strategy_value]"
							
						for_each_scope_loop = {
							array = faction_members
								
							var:leaving_country = {
								
								#log = "      -[This.GetTag] | APPLY (to offset) strategy towards [?Prev.GetTag]"
								meta_effect = {
									text = {
										add_ai_strategy = {
											type = diplo_action_acceptance
											id = [TAG]
											target = [ACTION]
											value = [VALUE]
										}
									}
									TAG = "[Prev.GetTag]"
									ACTION = "[?action.GetTokenKey]"
									VALUE = "[?strategy_value]"
								}
							}
						}
					}
				}
			}
		}
		
		#log = " "
		#log = "==== OTHER FACTIONS UPDATING STRATEGY ===="
		
		## apply faction diplo from other factions towards "leaving_country"
		for_each_scope_loop = {
			array = global.ai_faction_diplo_leader
			
			if = {
				limit = {
					is_in_faction = yes
					NOT = { tag = var:leading_country }
				}
				#log = "[This.GetTag] | update diplo towards [?leaving_country.GetTag] with leader [?leading_country.GetTag]"
				
				if = {
					limit = {
						is_in_array = { ai_faction_desire_target = leading_country }
					}
						
					for_each_loop = {
						array = ai_faction_desire_target
					
						
						if = {
							limit = {
								check_variable = { v = leading_country }
							}
							set_temp_variable = { action = ai_faction_desire_action^i }
							set_temp_variable = { strategy_value = ai_faction_desire_value^i }
							multiply_temp_variable = { strategy_value = -1 }
							
							#log = "  ---> ai_faction_desire_target: [?v.GetTag] | action: [?action.GetTokenKey] | value: [?strategy_value]"
							
							for_each_scope_loop = {
								array = faction_members
									
								#log = "      -[This.GetTag] | APPLY (to offset) strategy towards [?leaving_country.GetTag]"
								
								meta_effect = {
									text = {
										add_ai_strategy = {
											type = diplo_action_desire
											id = [TAG]
											target = [ACTION]
											value = [VALUE]
										}
									}
									TAG = "[?leaving_country.GetTag]"
									ACTION = "[?action.GetTokenKey]"
									VALUE = "[?strategy_value]"
								}
								
							}
						}
					}
				}
						
				if = {
					limit = {
						is_in_array = { ai_faction_acceptance_target = leading_country }
					}
						
					for_each_loop = {
						array = ai_faction_acceptance_target
					
						if = {
							limit = {
								check_variable = { v = leading_country }
							}
							set_temp_variable = { action = ai_faction_acceptance_action^i }
							set_temp_variable = { strategy_value = ai_faction_acceptance_value^i }
							multiply_temp_variable = { strategy_value = -1 }
								
							#log = "  ---> ai_faction_acceptance_target: [?v.GetTag] | action: [?action.GetTokenKey] | value: [?strategy_value]"
							
							for_each_scope_loop = {
								array = faction_members
									
								#log = "      -[This.GetTag] | APPLY (to offset) strategy towards [?leaving_country.GetTag]"
								
								meta_effect = {
									text = {
										add_ai_strategy = {
											type = diplo_action_acceptance
											id = [TAG]
											target = [ACTION]
											value = [VALUE]
										}
									}
									TAG = "[?leaving_country.GetTag]"
									ACTION = "[?action.GetTokenKey]"
									VALUE = "[?strategy_value]"
								}
								
							}
						}
					}
				}
						
			}
		}
	}
	
}

#FROM is former leader 
ai_update_on_assume_faction_leadership = { #transfer diplo data to the new leader
	if = { 
		limit = {
			is_in_array = { global.ai_faction_diplo_leader = FROM }
		}
		#log = "FROM [FROM.GetTag] in array"
		
		for_each_scope_loop = {
			array = global.ai_faction_diplo_leader
			
			#log = "[This.GetTag] has targeted strats towards FROM"
			for_each_loop = {
				array = ai_faction_desire_target
				
				if = {
					limit = {
						check_variable = { v = FROM }
					}
					set_variable = { ai_faction_desire_target^i = ROOT }
					#log = "    -replaced [From.GetTag] with [Root.GetTag] target | desire"
				}
			}
			for_each_loop = {
				array = ai_faction_acceptance_target
				
				if = {
					limit = {
						check_variable = { v = FROM }
					}
					set_variable = { ai_faction_acceptance_target^i = ROOT }
					#log = "    -replaced [From.GetTag] with [Root.GetTag] target | acceptance"
				}
			}
		}
			
		for_each_loop = {
			array = FROM.ai_faction_desire_target
			
			add_to_array = { ROOT.ai_faction_desire_target = v }
			add_to_array = { ROOT.ai_faction_desire_action = ai_faction_desire_action^i }
			add_to_array = { ROOT.ai_faction_desire_value = ai_faction_desire_value^i }
			#log = "[?v.GetTag] [?ai_faction_desire_action^i.GetTokenKey] [?ai_faction_desire_value^i] transferred"
		}
		clear_array = FROM.ai_faction_desire_target
		clear_array = FROM.ai_faction_desire_action
		clear_array = FROM.ai_faction_desire_value
		
		for_each_loop = {
			array = FROM.ai_faction_acceptance_target
			
			add_to_array = { ROOT.ai_faction_acceptance_target = v }
			add_to_array = { ROOT.ai_faction_acceptance_action = ai_faction_acceptance_action^i }
			add_to_array = { ROOT.ai_faction_acceptance_value = ai_faction_acceptance_value^i }
			#log = "[?v.GetTag] [?ai_faction_acceptance_action^i.GetTokenKey] [?ai_faction_acceptance_value^i] transferred"
		}
		clear_array = FROM.ai_faction_acceptance_target
		clear_array = FROM.ai_faction_acceptance_action
		clear_array = FROM.ai_faction_acceptance_value
		
		for_each_scope_loop = {
			array = allies
			
			set_variable = { ai_faction_leader_id = ROOT }
		}
	}
}

ai_update_diplomacy = {
	### ask_for_state_control
	
	if = {
		limit = {
			any_of_scopes = {
				array = global.players
				
				is_in_faction_with = ROOT
			}
			OR = {
				is_in_faction = yes
				is_subject = yes
				num_subjects > 0
			}
		}
		
		for_each_scope_loop = {
			array = global.players
			
			if = {
				limit = {
					OR = {
						is_in_faction_with = PREV
						is_subject_of = PREV
						PREV = { is_subject_of = PREV }
					}
					NOT = { PREV = { has_country_flag = ai_diplo:state_acceptance_@PREV } }
				}
				
				PREV = {
				
					set_country_flag = ai_diplo:state_acceptance_@PREV
					
					meta_effect = {
						text = {
							add_ai_strategy = {
								type = diplo_action_acceptance
								id = [X]
								target = ask_for_state_control
								value = 5000
							}
							add_ai_strategy = {
								type = diplo_action_acceptance
								id = [X]
								target = give_state_control
								value = 5000
							}
						}
						X = "[Prev.GetTag]"
					}
				}
			}
		}
	}
	 
}

ai_update_manual_faction_check = { #on_join_faction doesnt work for joining via effect._.

	if = {
		limit = {
			is_in_faction = yes
		}
		
		if = { #faction leader has changed, so we must have left and joined another faction
			limit = {
				NOT = { check_variable = { ai_faction_leader_id = faction_leader } }
			}
			
			log = "[This.GetTag] | MANUAL FACTION SWITCH CHECK | ai_faction_leader_id: [?ai_faction_leader_id.GetTag] | faction_leader: [?faction_leader.GetTag]"
			if = {
				limit = {
					has_variable = ai_faction_leader_id
				}
					
				set_temp_variable = { leaving_country = THIS }
				set_temp_variable = { leading_country = ai_faction_leader_id }
				
				ai_update_on_leaving_faction = yes
			}
			
			set_temp_variable = { joining_country = THIS }
			set_temp_variable = { leading_country = faction_leader }
			
			ai_update_on_joining_faction = yes
			
			d_ai_update_countries_to_defend_us = yes
		}
	}
	else_if = {
		limit = { has_variable = ai_faction_leader_id }

		log = "[This.GetTag] | MANUAL FACTION LEAVE CHECK | ai_faction_leader_id: [?ai_faction_leader_id.GetTag] | faction_leader: [?faction_leader.GetTag]"
		set_temp_variable = { leaving_country = THIS }
		set_temp_variable = { leading_country = ai_faction_leader_id }
		
		ai_update_on_leaving_faction = yes
	}
}
