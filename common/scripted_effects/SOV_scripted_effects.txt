increase_red_army_doctrines = {
	if = {
		limit = {
			has_idea = red_army_doctrines_16 
		}
		remove_ideas = red_army_doctrines_16 
	}
	else_if = {
		limit = {
			has_idea = red_army_doctrines_15 
		}		
		swap_ideas = {
			remove_idea = red_army_doctrines_15
			add_idea = red_army_doctrines_16
		}
	}
	else_if = {
		limit = {
			has_idea = red_army_doctrines_14 
		}		
		swap_ideas = {
			remove_idea = red_army_doctrines_14
			add_idea = red_army_doctrines_15
		}
	}	
	else_if = {
		limit = {
			has_idea = red_army_doctrines_13 
		}		
		swap_ideas = {
			remove_idea = red_army_doctrines_13
			add_idea = red_army_doctrines_14
		}
	}
	else_if = {
		limit = {
			has_idea = red_army_doctrines_12 
		}		
		swap_ideas = {
			remove_idea = red_army_doctrines_12
			add_idea = red_army_doctrines_13
		}
	}
	else_if = {
		limit = {
			has_idea = red_army_doctrines_11 
		}		
		swap_ideas = {
			remove_idea = red_army_doctrines_11
			add_idea = red_army_doctrines_12
		}
	}
	else_if = {
		limit = {
			has_idea = red_army_doctrines_10 
		}		
		swap_ideas = {
			remove_idea = red_army_doctrines_10
			add_idea = red_army_doctrines_11
		}
	}
	else_if = {
		limit = {
			has_idea = red_army_doctrines_9 
		}		
		swap_ideas = {
			remove_idea = red_army_doctrines_9
			add_idea = red_army_doctrines_10
		}
	}
	else_if = {
		limit = {
			has_idea = red_army_doctrines_8 
		}		
		swap_ideas = {
			remove_idea = red_army_doctrines_8
			add_idea = red_army_doctrines_9
		}
	}
	else_if = {
		limit = {
			has_idea = red_army_doctrines_7 
		}		
		swap_ideas = {
			remove_idea = red_army_doctrines_7
			add_idea = red_army_doctrines_8
		}
	}
	else_if = {
		limit = {
			has_idea = red_army_doctrines_6 
		}		
		swap_ideas = {
			remove_idea = red_army_doctrines_6
			add_idea = red_army_doctrines_7
		}
	}
	else_if = {
		limit = {
			has_idea = red_army_doctrines_5 
		}		
		swap_ideas = {
			remove_idea = red_army_doctrines_5
			add_idea = red_army_doctrines_6
		}
	}
	else_if = {
		limit = {
			has_idea = red_army_doctrines_4 
		}		
		swap_ideas = {
			remove_idea = red_army_doctrines_4
			add_idea = red_army_doctrines_5
		}
	}
	else_if = {
		limit = {
			has_idea = red_army_doctrines_3 
		}		
		swap_ideas = {
			remove_idea = red_army_doctrines_3
			add_idea = red_army_doctrines_4
		}
	}
	else_if = {
		limit = {
			has_idea = red_army_doctrines_2 
		}		
		swap_ideas = {
			remove_idea = red_army_doctrines_2
			add_idea = red_army_doctrines_3
		}
	}
	else_if = {
		limit = {
			NOT = { has_completed_focus = SOV_reformed_army }
		}		
		swap_ideas = {
			remove_idea = red_army_doctrines
			add_idea = red_army_doctrines_2
		}
	}
}
increase_red_air_doctrines = {
	if = {
		limit = {
			has_idea = red_airforce_X
		}
		remove_ideas = red_airforce_X 
	}
	else_if = {
		limit = {
			has_idea = red_airforce_IX
		}		
		swap_ideas = {
			remove_idea = red_airforce_IX
			add_idea = red_airforce_X
		}
	}
	else_if = {
		limit = {
			has_idea = red_airforce_VIII 
		}		
		swap_ideas = {
			remove_idea = red_airforce_VIII
			add_idea = red_airforce_IX
		}
	}	
	else_if = {
		limit = {
			has_idea = red_airforce_VII
		}		
		swap_ideas = {
			remove_idea = red_airforce_VII
			add_idea = red_airforce_VIII
		}
	}
	else_if = {
		limit = {
			has_idea = red_airforce_VI 
		}		
		swap_ideas = {
			remove_idea = red_airforce_VI
			add_idea = red_airforce_VII
		}
	}
	else_if = {
		limit = {
			has_idea = red_airforce_V
		}		
		swap_ideas = {
			remove_idea = red_airforce_V
			add_idea = red_airforce_VI
		}
	}
	else_if = {
		limit = {
			has_idea = red_airforce_IV 
		}		
		swap_ideas = {
			remove_idea = red_airforce_IV
			add_idea = red_airforce_V
		}
	}
	else_if = {
		limit = {
			has_idea = red_airforce_III 
		}		
		swap_ideas = {
			remove_idea = red_airforce_III
			add_idea = red_airforce_IV
		}
	}
	else_if = {
		limit = {
			has_idea = red_airforce_II 
		}		
		swap_ideas = {
			remove_idea = red_airforce_II
			add_idea = red_airforce_III
		}
	}
	else_if = {
		limit = {
			NOT = { has_completed_focus = SOV_reformed_air }
		}
		swap_ideas = {
			remove_idea = red_airforce
			add_idea = red_airforce_II
		}
	}
}
increase_red_fleet_doctrines = {
	if = {
		limit = {
			has_idea = red_fleet_V
		}		
		remove_ideas = red_fleet_V
	}
	else_if = {
		limit = {
			has_idea = red_fleet_IV 
		}		
		swap_ideas = {
			remove_idea = red_fleet_IV
			add_idea = red_fleet_V
		}
	}
	else_if = {
		limit = {
			has_idea = red_fleet_III 
		}		
		swap_ideas = {
			remove_idea = red_fleet_III
			add_idea = red_fleet_IV
		}
	}
	else_if = {
		limit = {
			has_idea = red_fleet_II 
		}		
		swap_ideas = {
			remove_idea = red_fleet_II
			add_idea = red_fleet_III
		}
	}
	else_if = {
		limit = {
			NOT = { has_completed_focus = SOV_reformed_navy }
		}		
		swap_ideas = {
			remove_idea = red_fleet
			add_idea = red_fleet_II
		}
	}
}
decrease_red_air_doctrines = {
	if = {
		limit = {
			has_idea = red_airforce_X
		}
		swap_ideas = {
			remove_idea = red_airforce_X
			add_idea = red_airforce_IX
		}
	}
	else_if = {
		limit = {
			has_idea = red_airforce_IX
		}		
		swap_ideas = {
			remove_idea = red_airforce_IX
			add_idea = red_airforce_VII
		}
	}
	else_if = {
		limit = {
			has_idea = red_airforce_VIII 
		}		
		swap_ideas = {
			remove_idea = red_airforce_VIII
			add_idea = red_airforce_VII
		}
	}	
	else_if = {
		limit = {
			has_idea = red_airforce_VII
		}		
		swap_ideas = {
			remove_idea = red_airforce_VII
			add_idea = red_airforce_VI
		}
	}
	else_if = {
		limit = {
			has_idea = red_airforce_VI 
		}		
		swap_ideas = {
			remove_idea = red_airforce_VI
			add_idea = red_airforce_V
		}
	}
	else_if = {
		limit = {
			has_idea = red_airforce_V
		}		
		swap_ideas = {
			remove_idea = red_airforce_V
			add_idea = red_airforce_IV
		}
	}
	else_if = {
		limit = {
			has_idea = red_airforce_IV 
		}		
		swap_ideas = {
			remove_idea = red_airforce_IV
			add_idea = red_airforce_III
		}
	}
	else_if = {
		limit = {
			has_idea = red_airforce_III 
		}		
		swap_ideas = {
			remove_idea = red_airforce_III
			add_idea = red_airforce_II
		}
	}
	else_if = {
		limit = {
			has_idea = red_airforce_II 
		}		
		swap_ideas = {
			remove_idea = red_airforce_II
			add_idea = red_airforce
		}
	}
	else_if = {
		limit = {
			has_idea = red_airforce
		}		
		remove_ideas = red_airforce
	}
}
increase_farming_industry = {
	if = {
		limit = {
			has_idea = SOV_pre_industry_farms_X
		}
		remove_ideas = SOV_pre_industry_farms_X
	}
	else_if = {
		limit = {
			has_idea = SOV_pre_industry_farms_IX 
		}		
		swap_ideas = {
			remove_idea = SOV_pre_industry_farms_IX
			add_idea = SOV_pre_industry_farms_X
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_pre_industry_farms_VIII 
		}		
		swap_ideas = {
			remove_idea = SOV_pre_industry_farms_VIII
			add_idea = SOV_pre_industry_farms_IX
		}
	}	
	else_if = {
		limit = {
			has_idea = SOV_pre_industry_farms_VII 
		}		
		swap_ideas = {
			remove_idea = SOV_pre_industry_farms_VII
			add_idea = SOV_pre_industry_farms_VIII
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_pre_industry_farms_VI 
		}		
		swap_ideas = {
			remove_idea = SOV_pre_industry_farms_VI
			add_idea = SOV_pre_industry_farms_VII
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_pre_industry_farms_V
		}		
		swap_ideas = {
			remove_idea = SOV_pre_industry_farms_V
			add_idea = SOV_pre_industry_farms_VI
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_pre_industry_farms_IV 
		}		
		swap_ideas = {
			remove_idea = SOV_pre_industry_farms_IV
			add_idea = SOV_pre_industry_farms_V
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_pre_industry_farms_III 
		}		
		swap_ideas = {
			remove_idea = SOV_pre_industry_farms_III
			add_idea = SOV_pre_industry_farms_IV
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_pre_industry_farms_II
		}		
		swap_ideas = {
			remove_idea = SOV_pre_industry_farms_II
			add_idea = SOV_pre_industry_farms_III
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_pre_industry_farms
		}		
		swap_ideas = {
			remove_idea = SOV_pre_industry_farms
			add_idea = SOV_pre_industry_farms_II
		}
	}
}

purge_better = {
	if = {
		limit = {
			has_dynamic_modifier = {
				modifier = officers_purged
			}
		}
		random_list = {	
			10 = {
				add_to_variable = { officers_purged_train = -0.01 } 
				modifier = {
					factor = 0
					check_variable = { officers_purged_train < 0.01 } 
				}
			}
			10 = {
				add_to_variable = { officers_purged_mobilization = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { officers_purged_mobilization > -0.01 } 
				}
			}
			10 = {
				add_to_variable = { officers_purged_command = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { officers_purged_command > -0.01 } 
				}
			}
			10 = {
				add_to_variable = { officers_purged_experience = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { officers_purged_experience > -0.01 } 
				}
			}
			10 = {
				add_to_variable = { officers_purged_experience_cap = 1 } 
				modifier = {
					factor = 0
					check_variable = { officers_purged_experience_cap > -0.01 } 
				}
			}
		}
	}
	else = {
		random_list = {	
			25 = {
				add_to_variable = { army_purge_defence = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { army_purge_defence > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_army_purged
						}
					}
				}
			}
			25 = {
				add_to_variable = { army_purge_org = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { army_purge_org > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_army_purged
						}
					}
				}
			}
			25 = {
				add_to_variable = { army_purge_morale = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { army_purge_morale > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_army_purged
						}
					}
				}
			}
			25 = {
				add_to_variable = { army_purge_breakthough = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { army_purge_breakthough > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_army_purged
						}
					}
				}
			}
			25 = {
				add_to_variable = { army_purge_tank_defense = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { army_purge_tank_defense > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_army_purged
						}
					}
				}
			}
			25 = {
				add_to_variable = { army_purge_width = -0.01 } 
				modifier = {
					factor = 0
					check_variable = { army_purge_tank_defense < 0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_army_purged
						}
					}
				}
			}
			25 = {
				add_to_variable = { army_purge_attrition = -0.05 } 
				modifier = {
					factor = 0
					check_variable = { army_purge_attrition < 0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_army_purged
						}
					}
				}
			}
			10 = {
				add_to_variable = { air_purge_xp = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { air_purge_xp > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_air_purged
						}
					}
				}
			}	
			10 = {
				add_to_variable = { air_purge_sup = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { air_purge_sup > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_air_purged
						}
					}
				}
			}
			10 = {
				add_to_variable = { air_purge_cas = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { air_purge_cas > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_air_purged
						}
					}
				}
			}
			10 = {
				add_to_variable = { air_purge_strat = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { air_purge_strat > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_air_purged
						}
					}
				}
			}
			10 = {
				add_to_variable = { air_purge_escort = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { air_purge_escort > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_air_purged
						}
					}
				}
			}	
			10 = {
				add_to_variable = { air_purge_intercept = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { air_purge_intercept > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_air_purged
						}
					}
				}
			}
			10 = {
				add_to_variable = { air_purge_nav = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { air_purge_nav > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_air_purged
						}
					}
				}
			}	
			10 = {
				add_to_variable = { air_purge_ace = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { air_purge_ace > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_air_purged
						}
					}
				}
			}
			10 = {
				add_to_variable = { air_purge_accident = -0.01 } 
				modifier = {
					factor = 0
					check_variable = { air_purge_accident < 0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_air_purged
						}
					}
				}
			}
			10 = {
				add_to_variable = { air_purge_xp_max = 1 } 
				modifier = {
					factor = 0
					check_variable = { air_purge_ace > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_air_purged
						}
					}
				}
			}
			5 = {
				add_to_variable = { nav_purge_xp = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { nav_purge_xp > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_fleet_purged
						}
					}
				}
			}	
			5 = {
				add_to_variable = { nav_purge_convoy = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { nav_purge_convoy > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_fleet_purged
						}
					}
				}
			}	
			5 = {
				add_to_variable = { nav_purge_accident = -0.01 } 
				modifier = {
					factor = 0
					check_variable = { nav_purge_accident < 0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_fleet_purged
						}
					}
				}
			}
			5 = {
				add_to_variable = { nav_purge_caps = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { nav_purge_caps > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_fleet_purged
						}
					}
				}
			}
			5 = {
				add_to_variable = { nav_purge_sub = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { nav_purge_sub > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_fleet_purged
						}
					}
				}
			}
			5 = {
				add_to_variable = { nav_purge_sortie = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { nav_purge_sortie > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_fleet_purged
						}
					}
				}
			}	
			5 = {
				add_to_variable = { nav_purge_air = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { nav_purge_air > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_fleet_purged
						}
					}
				}
			}
			5 = {
				add_to_variable = { nav_purge_org = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { nav_purge_org > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_fleet_purged
						}
					}
				}
			}
			5 = {
				add_to_variable = { nav_purge_hit = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { nav_purge_hit > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_fleet_purged
						}
					}
				}
			}
			5 = {
				add_to_variable = { nav_purge_strike = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { nav_purge_strike > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_fleet_purged
						}
					}
				}
			}
			5 = {
				add_to_variable = { nav_purge_retreat = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { nav_purge_retreat > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_fleet_purged
						}
					}
				}
			}						
			5 = {
				add_to_variable = { nav_purge_screen = 0.01 } 
				modifier = {
					factor = 0
					check_variable = { nav_purge_screen > -0.01 } 
				}
				modifier = {
					factor = 0
					NOT = {
						has_dynamic_modifier = {
							modifier = red_fleet_purged
						}
					}
				}
			}
		}
	}
}
####################################
####################################
########## SOV Guards Mechanic 

@OVER_CAP_PERCENTAGE_TO_DEBUFF_FACTOR = 1
@OVER_CAP_MAX_DEBUFF = 0.5 

@GUARD_INF = 1
@GUARD_CAV = 1
@GUARD_ARTY = 1
@GUARD_ARTY_MOT = 1
@GUARD_MOT = 1
@GUARD_MECH = 1
@GUARD_LIGHT_ARM = 1
@GUARD_MED_ARM = 1
@GUARD_HV_ARM = 1
@GUARD_PARA = 1
@GUARD_ROCKET = 1

#modifier variables
#guard_forces_overweight_factor #affects the over cap debuff
#guard_forces_factor #how much % of army strength can be guards. 0-1

#variables
#guard_forces_cap #how many battalions can be guards
#num_guards #how many battalions are guards
#num_guard_over_limit
set_guard_forces_cap = {
	
	count_guard_battalions = yes

	clamp_variable = { var = guard_forces_factor min = 0 max = 1 }
	set_temp_variable = { num_batts = army_strength }
	multiply_temp_variable = { num_batts = guard_forces_factor }

	set_variable = { guard_forces_cap = num_batts }
	round_variable = guard_forces_cap

	clear_variable = num_guard_over_limit
	clear_variable = guard_training_debuff
	if = {
		limit = {
			check_variable = { num_guards > guard_forces_cap }
			is_player = yes
		}
		
		if = {
			limit = {
				NOT = {
					has_dynamic_modifier = {
						modifier = guard_forces_cap
					}
				}
			}
			add_dynamic_modifier = {
				modifier = guard_forces_cap
			}
		}

		#STATS
		set_variable = { num_guard_over_limit = num_guards }
		divide_variable = { num_guard_over_limit = guard_forces_cap }
		subtract_from_variable = { num_guard_over_limit = 1 }
		
		#FACTOR 
		multiply_variable = { num_guard_over_limit = @OVER_CAP_PERCENTAGE_TO_DEBUFF_FACTOR }

		#MODIFIER
		set_temp_variable = { mod = guard_forces_overweight_factor }
		add_to_temp_variable = { mod = 1 }
		multiply_variable = { num_guard_over_limit = mod }
		
		#MAX
		set_temp_variable = { max_debuff = @OVER_CAP_MAX_DEBUFF }
		add_to_temp_variable = { max_debuff = Root.modifier@special_forces_max_overweight_debuff }

		clamp_variable = { var = num_guard_over_limit max = max_debuff }
		
		multiply_variable = { num_guard_over_limit = -1 }
	}
}

count_guard_battalions = {
	clear_variable = num_guards

#INFANTRY
	set_temp_variable = { temp = num_battalions_with_type@guards_infantry }
	set_temp_variable = { weight = @GUARD_INF }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_guards = temp }
	
#CAVALRY
	set_temp_variable = { temp = num_battalions_with_type@guards_cavalry }
	set_temp_variable = { weight = @GUARD_CAV }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_guards = temp }
	
#PARATROOPER
	set_temp_variable = { temp = num_battalions_with_type@guards_paratrooper }
	set_temp_variable = { weight = @GUARD_PARA }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_guards = temp }

#MOTORIZED
	set_temp_variable = { temp = num_battalions_with_type@guards_motorized }
	set_temp_variable = { weight = @GUARD_MOT }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_guards = temp }
	
#MECHANIZED
	set_temp_variable = { temp = num_battalions_with_type@guards_mechanized }
	set_temp_variable = { weight = @GUARD_MECH }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_guards = temp }
	
#ARTY
	set_temp_variable = { temp = num_battalions_with_type@guards_artillery_brigade }
	add_to_temp_variable = { temp = num_battalions_with_type@guards_artillery_brigade_med }
	add_to_temp_variable = { temp = num_battalions_with_type@guards_mountain_artillery_brigade }
	set_temp_variable = { weight = @GUARD_ARTY }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_guards = temp }
	
#ARTY MOT
	set_temp_variable = { temp = num_battalions_with_type@guards_artillery_brigade_mot }
	add_to_temp_variable = { temp = num_battalions_with_type@guards_artillery_brigade_mot_med }
	add_to_temp_variable = { temp = num_battalions_with_type@guards_mountain_artillery_brigade_mot }
	set_temp_variable = { weight = @GUARD_ARTY_MOT }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_guards = temp }
	
#ROCKET
	set_temp_variable = { temp = num_battalions_with_type@guards_motorized_rocket_brigade }
	add_to_temp_variable = { temp = num_battalions_with_type@guards_rocket_artillery_brigade }
	add_to_temp_variable = { temp = num_battalions_with_type@artillery_division }
	set_temp_variable = { weight = @GUARD_ROCKET }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_guards = temp }

	if = {
		limit = {
			check_variable = { num_guards = 0 }
		}
		clear_variable = num_guards
	}
}
unlock_industry_evac = {
	set_country_flag = unlock_industry_evac
	
	every_owned_state = {
		limit = {
			is_on_continent = europe
			is_controlled_by = ROOT
		}
		if = {
			limit = {
				OR = {
					check_variable = { building_level@industrial_complex > 0 }
					check_variable = { building_level@arms_factory > 0 }
					check_variable = { building_level@tank_assembly > 0 } #TODO
					check_variable = { building_level@engine_assembly > 0 }
					check_variable = { building_level@artillery_assembly > 0 }
					check_variable = { building_level@air_assembly > 0 }
				}
			}
			ROOT = {
				activate_targeted_decision = {
					target = PREV
					decision = industry_evacuation_decision
				}
			}
		}
		else = {
			ROOT = {
				remove_targeted_decision = {
					target = PREV
					decision = industry_evacuation_decision
				}
			}
		}
	}
}


SOV_create_onmap_tank_assembly = {
	if = {
		limit = { check_variable = { goodies_onmap > 14 } }
		random_owned_controlled_state = {
			prioritize = { 223 }
			limit = {
				NOT = { 
					region = 130
					region = 131
					region = 267
					region = 244
					region = 263
					region = 265
					region = 134
				}
				is_core_of = SOV
				is_fully_controlled_by = SOV
				free_building_slots = {
					building = tank_assembly
					size > 1
					include_locked = yes
				}
				industrial_complex > 1
				NOT = { has_state_category = tiny_island }
				NOT = { has_state_category = small_island }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = tank_assembly
				level = 2
				instant_build = yes
			}
		}
	}
	if = {
		limit = { check_variable = { goodies_onmap > 13 } }
		random_owned_controlled_state = {
			prioritize = { 222 }
			limit = {
				NOT = { 
					region = 130
					region = 131
					region = 267
					region = 244
					region = 263
					region = 265
					region = 134
				}
				is_core_of = SOV
				is_fully_controlled_by = SOV
				free_building_slots = {
					building = tank_assembly
					size > 1
					include_locked = yes
				}
				industrial_complex > 1
				NOT = { has_state_category = tiny_island }
				NOT = { has_state_category = small_island }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = tank_assembly
				level = 2
				instant_build = yes
			}
		}
	}
	if = {
		limit = { check_variable = { goodies_onmap > 12 } }
		random_owned_controlled_state = {
			prioritize = { 221 }
			limit = {
				NOT = { 
					region = 130
					region = 131
					region = 267
					region = 244
					region = 263
					region = 265
					region = 134
				}
				is_core_of = SOV
				is_fully_controlled_by = SOV
				free_building_slots = {
					building = tank_assembly
					size > 1
					include_locked = yes
				}
				industrial_complex > 1
				NOT = { has_state_category = tiny_island }
				NOT = { has_state_category = small_island }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = tank_assembly
				level = 2
				instant_build = yes
			}
		}
	}
	if = {
		limit = { check_variable = { goodies_onmap > 11 } }
		random_owned_controlled_state = {
			prioritize = { 260 }
			limit = {
				NOT = { 
					region = 130
					region = 131
					region = 267
					region = 244
					region = 263
					region = 265
					region = 134
				}
				is_core_of = SOV
				is_fully_controlled_by = SOV
				free_building_slots = {
					building = tank_assembly
					size > 1
					include_locked = yes
				}
				industrial_complex > 1
				NOT = { has_state_category = tiny_island }
				NOT = { has_state_category = small_island }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = tank_assembly
				level = 2
				instant_build = yes
			}
		}
	}
	if = {
		limit = { check_variable = { goodies_onmap > 10 } }
		random_owned_controlled_state = {
			prioritize = { 219 }
			limit = {
				NOT = { 
					region = 130
					region = 131
					region = 267
					region = 244
					region = 263
					region = 265
					region = 134
				}
				is_core_of = SOV
				is_fully_controlled_by = SOV
				free_building_slots = {
					building = tank_assembly
					size > 1
					include_locked = yes
				}
				industrial_complex > 1
				NOT = { has_state_category = tiny_island }
				NOT = { has_state_category = small_island }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = tank_assembly
				level = 2
				instant_build = yes
			}
		}
	}
	if = {
		limit = { check_variable = { goodies_onmap > 9 } }
		random_owned_controlled_state = {
			prioritize = { 239 }
			limit = {
				NOT = { 
					region = 130
					region = 131
					region = 267
					region = 244
					region = 263
					region = 265
					region = 134
				}
				is_core_of = SOV
				is_fully_controlled_by = SOV
				free_building_slots = {
					building = tank_assembly
					size > 1
					include_locked = yes
				}
				industrial_complex > 1
				NOT = { has_state_category = tiny_island }
				NOT = { has_state_category = small_island }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = tank_assembly
				level = 2
				instant_build = yes
			}
		}
	}
	if = {
		limit = { check_variable = { goodies_onmap > 8 } }
		random_owned_controlled_state = {
			prioritize = { 845 }
			limit = {
				NOT = { 
					region = 130
					region = 131
					region = 267
					region = 244
					region = 263
					region = 265
					region = 134
				}
				is_core_of = SOV
				is_fully_controlled_by = SOV
				free_building_slots = {
					building = tank_assembly
					size > 1
					include_locked = yes
				}
				industrial_complex > 1
				NOT = { has_state_category = tiny_island }
				NOT = { has_state_category = small_island }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = tank_assembly
				level = 2
				instant_build = yes
			}
		}
	}
	if = {
		limit = { check_variable = { goodies_onmap > 7 } }
		random_owned_controlled_state = {
			prioritize = { 828 }
			limit = {
				NOT = { 
					region = 130
					region = 131
					region = 267
					region = 244
					region = 263
					region = 265
					region = 134
				}
				is_core_of = SOV
				is_fully_controlled_by = SOV
				free_building_slots = {
					building = tank_assembly
					size > 1
					include_locked = yes
				}
				industrial_complex > 1
				NOT = { has_state_category = tiny_island }
				NOT = { has_state_category = small_island }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = tank_assembly
				level = 2
				instant_build = yes
			}
		}
	}
	if = {
		limit = { check_variable = { goodies_onmap > 6 } }
		random_owned_controlled_state = {
			prioritize = { 252 }
			limit = {
				NOT = { 
					region = 130
					region = 131
					region = 267
					region = 244
					region = 263
					region = 265
					region = 134
				}
				is_core_of = SOV
				is_fully_controlled_by = SOV
				free_building_slots = {
					building = tank_assembly
					size > 1
					include_locked = yes
				}
				industrial_complex > 1
				NOT = { has_state_category = tiny_island }
				NOT = { has_state_category = small_island }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = tank_assembly
				level = 2
				instant_build = yes
			}
		}
	}
	if = {
		limit = { check_variable = { goodies_onmap > 5 } }
		random_owned_controlled_state = {
			prioritize = { 248 }
			limit = {
				NOT = { 
					region = 130
					region = 131
					region = 267
					region = 244
					region = 263
					region = 265
					region = 134
				}
				is_core_of = SOV
				is_fully_controlled_by = SOV
				free_building_slots = {
					building = tank_assembly
					size > 1
					include_locked = yes
				}
				industrial_complex > 1
				NOT = { has_state_category = tiny_island }
				NOT = { has_state_category = small_island }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = tank_assembly
				level = 2
				instant_build = yes
			}
		}
	}
	if = {
		limit = { check_variable = { goodies_onmap > 4 } }
		random_owned_controlled_state = {
			prioritize = { 571 }
			limit = {
				NOT = { 
					region = 130
					region = 131
					region = 267
					region = 244
					region = 263
					region = 265
					region = 134
				}
				is_core_of = SOV
				is_fully_controlled_by = SOV
				free_building_slots = {
					building = tank_assembly
					size > 1
					include_locked = yes
				}
				industrial_complex > 1
				NOT = { has_state_category = tiny_island }
				NOT = { has_state_category = small_island }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = tank_assembly
				level = 2
				instant_build = yes
			}
		}
	}
	if = {
		limit = { check_variable = { goodies_onmap > 3 } }
		random_owned_controlled_state = {
			prioritize = { 653 }
			limit = {
				NOT = { 
					region = 130
					region = 131
					region = 267
					region = 244
					region = 263
					region = 265
					region = 134
				}
				is_core_of = SOV
				is_fully_controlled_by = SOV
				free_building_slots = {
					building = tank_assembly
					size > 1
					include_locked = yes
				}
				industrial_complex > 1
				NOT = { has_state_category = tiny_island }
				NOT = { has_state_category = small_island }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = tank_assembly
				level = 2
				instant_build = yes
			}
		}
	}
	if = {
		limit = { check_variable = { goodies_onmap > 2 } }
		random_owned_controlled_state = {
			prioritize = { 572 }
			limit = {
				NOT = { 
					region = 130
					region = 131
					region = 267
					region = 244
					region = 263
					region = 265
					region = 134
				}
				is_core_of = SOV
				is_fully_controlled_by = SOV
				free_building_slots = {
					building = tank_assembly
					size > 1
					include_locked = yes
				}
				industrial_complex > 1
				NOT = { has_state_category = tiny_island }
				NOT = { has_state_category = small_island }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = tank_assembly
				level = 2
				instant_build = yes
			}
		}
	}
	if = {
		limit = { check_variable = { goodies_onmap > 1 } }
		random_owned_controlled_state = {
			prioritize = { 217 }
			limit = {
				NOT = { 
					region = 130
					region = 131
					region = 267
					region = 244
					region = 263
					region = 265
					region = 134
				}
				is_core_of = SOV
				is_fully_controlled_by = SOV
				free_building_slots = {
					building = tank_assembly
					size > 1
					include_locked = yes
				}
				industrial_complex > 1
				NOT = { has_state_category = tiny_island }
				NOT = { has_state_category = small_island }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = tank_assembly
				level = 2
				instant_build = yes
			}
		}
	}
	if = {
		limit = { check_variable = { goodies_onmap > 0 } }
		random_owned_controlled_state = {
			prioritize = { 251 }
			limit = {
				NOT = { 
					region = 130
					region = 131
					region = 267
					region = 244
					region = 263
					region = 265
					region = 134
				}
				is_core_of = SOV
				is_fully_controlled_by = SOV
				free_building_slots = {
					building = tank_assembly
					size > 1
					include_locked = yes
				}
				industrial_complex > 1
				NOT = { has_state_category = tiny_island }
				NOT = { has_state_category = small_island }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = tank_assembly
				level = 2
				instant_build = yes
			}
		}
	}
	clear_variable = goodies_onmap
}

SOV_initiate_red_purge_values = {
	set_temp_variable = { army_purge_defence_temp = officers_purged_command }
	multiply_temp_variable = { army_purge_defence_temp = 3.25 }
	add_to_variable = { army_purge_defence = army_purge_defence_temp tooltip = army_purge_defence_TT }
	
	set_temp_variable = { army_purge_org_temp = officers_purged_train }
	multiply_temp_variable = { army_purge_org_temp = -2.25 }
	add_to_variable = { army_purge_org = army_purge_org_temp tooltip = army_purge_org_TT }
		
	set_temp_variable = { army_purge_morale_temp = officers_purged_mobilization }
	multiply_temp_variable = { army_purge_morale_temp = 0.5 }
	add_to_variable = { army_purge_morale = army_purge_morale_temp tooltip = army_purge_morale_TT }
		
	add_to_variable = { army_purge_breakthough = officers_purged_mobilization tooltip = army_purge_breakthough_TT }
	
	set_temp_variable = { army_purge_width_temp = officers_purged_train }
	multiply_temp_variable = { army_purge_width_temp = 0.4 }				
	add_to_variable = { army_purge_width = army_purge_width_temp tooltip = army_purge_width_TT }

	set_temp_variable = { army_purge_attrition_temp = officers_purged_experience_cap }
	multiply_temp_variable = { army_purge_attrition_temp = -0.01 }	
	add_to_variable = { army_purge_attrition = army_purge_attrition_temp tooltip = army_purge_attrition_TT }			

	set_temp_variable = { army_purge_tank_defense_temp = officers_purged_train }
	multiply_temp_variable = { army_purge_tank_defense_temp = -1 }				
	add_to_variable = { army_purge_tank_defense = army_purge_tank_defense_temp tooltip = army_purge_tank_defense_TT }
	
}

SOV_multiply_army_purge = {
	custom_effect_tooltip = army_purge_mult_TT
	
	add_to_temp_variable = { army_purge_mult = 1 }
	multiply_variable = { army_purge_defence = army_purge_mult }
	multiply_variable = { army_purge_org = army_purge_mult }
	multiply_variable = { army_purge_morale = army_purge_mult }
	multiply_variable = { army_purge_breakthough = army_purge_mult }
	multiply_variable = { army_purge_width = army_purge_mult }
	multiply_variable = { army_purge_attrition = army_purge_mult }
	multiply_variable = { army_purge_tank_defense = army_purge_mult }
	
}
