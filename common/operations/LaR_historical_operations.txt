heavy_water_raid = { ### 1/50
	icon = GFX_historical_heavy_water
	map_icon = GFX_historical_heavy_water_small
	name = heavy_water_raid
	desc = heavy_water_raid_desc
	days = 90

	allowed = {
		NOT = { original_tag = GER }
	}
	available = { 
		has_global_flag = GER_heavy_water_production_underway
		has_war_with = GER
		110 = { resistance > 50 }
		network_strength = {
			target = GER
			state = 110
			value > 50
		}
	}
	visible = {
		has_global_flag = GER_heavy_water_production_underway
		FROM = {
			original_tag = GER
		}
		network_national_coverage = {
			target = GER
			value > 0
		}
		has_done_agency_upgrade = upgrade_form_operations
		NOT = { has_country_flag = ui_hide_operations@FROM }
	}

	operatives = 1

	# Integer [0-100] - Every operation has a hard requirement of network strength in the target country
	network_strength = 50

	equipment = {
		infantry_equipment = 500
		support_equipment = 50
	}

	on_start = {  # SCOPE_OPERATION
		
	}

	outcome_modifiers = { operation_outcome }
	cost_modifiers = { operation_cost }
	risk_modifiers = { operation_risk }

	outcome_potential = {
		custom_effect_tooltip = heavy_water_raid_outcome_tt
	}
	risk_chance = 0.50
	experience = 5
	# outcome is an effect that runs when the operation has completed
	outcome_execute = { # SCOPE_OPERATION
		FROM = { country_event = lar_heavy_water.1 }
		ROOT = { country_event = lar_heavy_water.2 }
	}
	
	# This is where all the separate phases are defined
	# Each phase for an operation may have a single actual phase assigned to it, which is determined here
	phases = { #infiltration 
		heavy_water_infiltration = { base = 100 }
	}
	phases = { 
		heavy_water_attack = { base = 100 }
	}
	phases = { 
		heavy_water_exfiltration = { base = 100 }
	}
}

bruneval_raid = { ### 1/50
	icon = GFX_historical_bruneval_raid
	map_icon = GFX_historical_bruneval_raid_small
	name = bruneval_raid
	desc = bruneval_raid_desc
	days = 180

	allowed = {
		NOT = { original_tag = GER }
	}
	available = { 
		enemy_has_equal_or_better_radar_tech_trigger = yes
	}

	visible = {
		FROM = {
			original_tag = GER
		}
		has_war_with = GER
		GER = {
			has_tech = radio_detection
		}
		FRA = {
			has_war_with = GER
			has_capitulated = yes
		}
		not = { has_global_flag = bruneval_raid_success }
		network_national_coverage = {
			target = GER
			value > 0
		}
		has_done_agency_upgrade = upgrade_form_operations
		NOT = { has_country_flag = ui_hide_operations@FROM }
	}
	operatives = 1
	experience = 5

	# Integer [0-100] - Every operation has a hard requirement of network strength in the target country
	network_strength = 50

	equipment = {
		infantry_equipment = 500
		support_equipment = 50
	}

	on_start = {  # SCOPE_OPERATION
		
	}

	outcome_modifiers = { operation_outcome }
	cost_modifiers = { operation_cost }
	risk_modifiers = { operation_risk }

	outcome_potential = {
		custom_effect_tooltip = bruneval_raid_outcome_tt
	}
	risk_chance = 0.2
	# outcome is an effect that runs when the operation has completed
	outcome_execute = { # SCOPE_OPERATION
		FROM = { country_event = lar_bruneval_raid.1 }
		ROOT = { country_event = lar_bruneval_raid.2 }
	}
	
	# This is where all the separate phases are defined
	# Each phase for an operation may have a single actual phase assigned to it, which is determined here
	phases = { #infiltration 
		bruneval_infiltration = { base = 100 }
	}
	phases = { 
		bruneval_attack = { base = 100 }
	}
	phases = { 
		bruneval_exfiltration = { base = 100 }
	}
}
serbian_uprising = { 
	icon = GFX_operations_boost_resistance
	map_icon = GFX_operations_boost_resistance_map
	name = operation_serbian_uprising
	desc = operation_serbian_uprising_desc
	priority = 3

	days = 75
	network_strength = 35
	operatives = 2
	allowed = {
		original_tag = SOV
	}
	available = { 
		NOT = { has_global_flag = Tito_killed }
	}
	visible = {
		NOT = { has_country_flag = ui_hide_operations@FROM }
		has_done_agency_upgrade = upgrade_form_operations
		has_completed_focus = SOV_workers_rise
		
		network_national_coverage = {
			target = FROM
			value > 0
		}
		has_operation_token = {
			tag = FROM
			token = token_resistance_contacts
		}
		FROM = {
			has_war_with = SOV
			any_controlled_state = {
				is_core_of = SER
			}
		}
	}

	selection_target = {
		targets = { FROM }
	}

	selection_target_state = {
		has_resistance = yes
		is_core_of = SER
	}

	equipment = {
		infantry_equipment = 5000
		SMG_equipment = 5000
		support_equipment = 500
	}

	required_tokens = {
		token_resistance_contacts
	}
	risk_chance = 0.25
	experience = 1.5
	cost_modifiers = { operation_coup_cost }
	outcome_modifiers = { operation_outcome }
	outcome_execute = {
		FROM = { country_event = lar_serb_uprising.1 }
		ROOT = { country_event = lar_serb_uprising.2 }
	}

	
	phases = { #infiltration
		infiltration_border = { base = 50 }
		infiltration_submarine = { base = 25 }
		infiltration_paradrop = { 
			base = 25 
		}
	}
	phases = { #resistance support
		resistance_support_arms_depots = { base = 15 }
		resistance_support_distribute_weapons = { base = 15 }
		resistance_support_organize_training = { base = 15 }
		resistance_support_coordinate_groups = { base = 15 }
		lar_fra_coup_pre_position_units = { base = 50 }
	}
	phases = { lar_fra_launch_coup = { base = 100 } }
}
capture_tito = { ### 1/50
	icon = GFX_historical_capture_tito
	map_icon = GFX_historical_capture_tito_small
	name = capture_tito
	desc = capture_tito_desc
	days = 90

	allowed = {
		original_tag = GER
	}
	available = { 
		core_resistance = {
			occupied_country_tag = YUG
			value > 40
		}
	}

	visible = { 
		NOT = { has_country_flag = ui_hide_operations@FROM }
		FROM = {
			tag = YUG
		}
		core_resistance = {
			occupied_country_tag = YUG
			value > 10
		}
		network_national_coverage = {
			target = YUG
			value > 0
		}
		NOT = { has_global_flag = Tito_killed }
	}

	operatives = 1
	experience = 5
	outcome_modifiers = { operation_outcome }
	cost_modifiers = { operation_cost }
	risk_modifiers = { operation_risk }

	# Integer [0-100] - Every operation has a hard requirement of network strength in the target country
	network_strength = 50

	equipment = {
		infantry_equipment = 2000
	}

	on_start = {  # SCOPE_OPERATION
		
	}
	outcome_potential = {
		custom_effect_tooltip = capture_tito_outcome_tt
	}
	risk_chance = 0.4
	# outcome is an effect that runs when the operation has completed
	outcome_execute = { # SCOPE_OPERATION
		ROOT = { 
			random_list = {
				75 = { country_event = lar_capture_tito.1 } #raid fails
				25 = { country_event = lar_capture_tito.2 } #raid succeeds
			}
		}
	}
	
	# This is where all the separate phases are defined
	# Each phase for an operation may have a single actual phase assigned to it, which is determined here
	phases = { #infiltration 
		capture_tito_infiltration = { base = 100 }
	}
	phases = { 
		capture_tito_attack = { base = 100 }
	}
	phases = { 
		capture_tito_exfiltration = { base = 100 }
	}
}

rescue_mussolini = { ### 1/35
	icon = GFX_historical_mussolini_rescue
	map_icon = GFX_historical_mussolini_rescue_small
	name = rescue_mussolini
	desc = rescue_mussolini_desc
	days = 90

	allowed = {
		original_tag = GER
	}
	available = { 
		has_government = fascism
		has_war_with = ITA
		ITA = {
			not = {
				has_government = fascism
			}
		}
	}
	visible = {
		NOT = { has_country_flag = ui_hide_operations@FROM }
		# TODO is this really enough of a check?
		has_government = fascism
		FROM = {
			original_tag = ITA
			not = {
				has_government = fascism
			}
		}
		not = { has_global_flag = mussolini_rescued_flag }
		network_national_coverage = {
			target = ITA
			value > 0
		}
	}

	operatives = 1
	experience = 5
	outcome_modifiers = { operation_outcome }
	cost_modifiers = { operation_cost }
	risk_modifiers = { operation_risk }

	# Integer [0-100] - Every operation has a hard requirement of network strength in the target country
	network_strength = 35

	equipment = {
		infantry_equipment = 2000
	}

	on_start = {  # SCOPE_OPERATION
		
	}
	outcome_potential = {
		custom_effect_tooltip = rescue_mussolini_outcome_tt
	}
	risk_chance = 0.3
	# outcome is an effect that runs when the operation has completed
	outcome_execute = { # SCOPE_OPERATION
		ROOT = { 
			random_list = {
				25 = { country_event = lar_rescue_mussolini.1 } #raid fails
				75 = { country_event = lar_rescue_mussolini.2 } #raid succeeds
			}
		}
	}
	
	# This is where all the separate phases are defined
	# Each phase for an operation may have a single actual phase assigned to it, which is determined here
	phases = { #infiltration 
		rescue_mussolini_infiltration = { base = 100 }
	}
	phases = { 
		rescue_mussolini_attack = { base = 100 }
	}
	phases = { 
		rescue_mussolini_exfiltration = { base = 100 }
	}
}
kill_trotsky = { ### 1/50
	icon = GFX_historical_capture_tito
	map_icon = GFX_historical_capture_tito_small
	name = kill_trotsky
	desc = kill_trotsky_desc
	days = 30

	allowed = {
		original_tag = SOV
	}
	available = { 
		network_national_coverage = {
			target = MEX
			value > 0
		}		
	}

	visible = { 
		NOT = { has_country_flag = ui_hide_operations@FROM }
		FROM = {
			tag = MEX
		}
		has_completed_focus = SOV_assassinate_trotsky
		NOT = { 
			has_global_flag = trotsky_dead 
			has_global_flag = trotsky_survives
		}
	}

	operatives = 1
	experience = 5
	outcome_modifiers = { operation_outcome }
	cost_modifiers = { operation_cost }
	risk_modifiers = { operation_risk }

	# Integer [0-100] - Every operation has a hard requirement of network strength in the target country
	network_strength = 15

	equipment = {
		infantry_equipment = 200
	}

	on_start = {  # SCOPE_OPERATION
		
	}
	outcome_potential = {
		custom_effect_tooltip = kill_trotsky_outcome_tt
	}
	risk_chance = 0.1
	# outcome is an effect that runs when the operation has completed
	outcome_execute = { # SCOPE_OPERATION
		ROOT = { 
			random_list = {
				10 = { news_event = news.38 } #fails, trosky killed 120 days later
				90 = { news_event = news.37 } #succeeds
			}
		}
	}
	
	# This is where all the separate phases are defined
	# Each phase for an operation may have a single actual phase assigned to it, which is determined here
	phases = { #infiltration 
		capture_tito_infiltration = { base = 100 }
	}
	phases = { 
		capture_tito_attack = { base = 100 }
	}
	phases = { 
		capture_tito_exfiltration = { base = 100 }
	}
}