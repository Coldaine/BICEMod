### FLYING BOMBS

sp_rockets_flying_bomb_pulsejet = {
	specialization = specialization_air 
	icon = GFX_sp_rockets_flying_bomb

	project_tags = {
		sp_tag_guided_bomb
	}

	breakthrough_cost = {
		specialization_air = 2
	}

	resource_cost = {
		resources = { 
			steel = 8
			aluminium = 8
			tungsten = 4
			rubber = 4
		 }
	}
	
	complexity = sp_complexity.medium

	prototype_time = sp_time.prototype.medium
	
	available = { 
		FROM = {
			has_tech = early_guidance_systems
			has_tech = advanced_machine_tools
			has_tech = chemical_industry_ii
		}
	}

	ai_will_do = {
		base = 1
		modifier = {
			factor = 3
			ROOT = { tag = GER }
		}
		modifier = {
			factor = 0.5
			ROOT = { is_major = no }
		}
		modifier = {
			factor = 0.5 # Play a bit safe until we have radar
			ROOT = { NOT = { has_tech = radio_detection } }
		}
	}

	project_output = {
		enable_equipments = {
			guided_missile_equipment_1
		}
	}

	generic_prototype_rewards = {
		sp_rockets_scientist_xp_generic_reward
		sp_rockets_political_interference_generic_reward
		sp_rockets_onsite_explosion_generic_reward
		sp_rockets_generic_major_breakthrough_reward
		sp_rockets_generic_avionics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3
	}

	unique_prototype_rewards = {
		
		# Design Choice
		sp_rocket_design_choice_reward = {
			fire_only_once = yes

			threshold = { 
				min = 0
				max = 50
			}

			weight = {
				base = 50
			}
			
			option = {
				token = sp_rocket_design_choice_reward_balanced
				
				iteration_output = {
	
				}
			}

			option = {
				token = sp_rocket_design_choice_reward_range
				
				iteration_output = {
					equipment_bonus = {
						guided_missile_equipment = {
							maximum_speed = 0.05
							air_range = 0.1
							air_bombing = -0.075
						}
					}
				}
			}
			option = {
				token = sp_rocket_design_choice_reward_payload
				
				iteration_output = {
					equipment_bonus = {
						guided_missile_equipment = {
							air_bombing = 0.1
							air_range = -0.05
						}
					}
				}
			}

		}

		# Pulsejet Design
		sp_rockets_flying_bomb_technical_breakthrough_in_pulsejet_design_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 50
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_rockets_flying_bomb_technical_breakthrough_in_pulsejet_design_reward_option
						
				iteration_output = {
					equipment_bonus = {
						guided_missile_equipment = {
							maximum_speed = 0.02
							air_range = 0.02
						}
					}
				}
			}
		}

		# Launch ramp innovations
		sp_rockets_flying_bomb_launch_ramp_innovations_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 75
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_rockets_flying_bomb_launch_ramp_innovations_reward_option
						
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.gain.low }
					}
				}
			}
		}

		# Mass Production
		sp_rockets_flying_bomb_mass_production_scaling_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 75
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_rockets_flying_bomb_mass_production_scaling_reward_option
						
				iteration_output = {
					equipment_bonus = {
						guided_missile_equipment = {
							build_cost_ic = -0.05
						}
					}
				}
			}
		}

		# Engine Optimization
		sp_rockets_flying_bomb_engine_optimization_breakthrough_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 75
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_rockets_flying_bomb_engine_optimization_breakthrough_reward_option
						
				iteration_output = {
					equipment_bonus = {
						guided_missile_equipment = {
							air_range = 0.03
						}
					}
				}
			}
		}

		# Technological Innovations
		sp_rockets_flying_bomb_technological_innovation_in_guidance_systems_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 75
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_rockets_flying_bomb_technological_innovation_in_guidance_systems_reward_option
						
				iteration_output = {
					equipment_bonus = {
						guided_missile_equipment = {
							air_range = 0.02
							air_bombing = 0.02
						}
					}
				}
			}
		}
		# Test Flight Failures
		sp_rockets_flying_bomb_test_flight_failures_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 75
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_rockets_flying_bomb_test_flight_failures_reward_option
						
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.loss.low }
					}
					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.very_high
							specialization = specialization_air
						}
					}
				}
			}
		}
	}
}

### BALLISTIC MISSILES

sp_rockets_early_ballistic_missile = {
	specialization = specialization_air 
	icon = GFX_sp_rockets_ballistic_missile
	
	breakthrough_cost = {
		specialization_air = 3
	}
	
	project_tags = sp_tag_rocket

	complexity = sp_complexity.large
	
	prototype_time = sp_time.prototype.medium
	
	resource_cost = {
		resources = {
			steel = 12
			aluminium = 12
			chromium = 6
			rubber = 6
		}
	}

	available = { 
		FROM = {
			has_tech = early_guidance_systems
			has_tech = rocket_engines
			has_tech = experimental_rockets
		}
	}

	ai_will_do = {
		base = 1
		modifier = {
			factor = 2
			ROOT = { tag = GER }
		}
		modifier = {
			factor = 0.5
			ROOT = { is_major = no }
		}
		modifier = {
			factor = 0.5 # Play a bit safe until we have radar
			ROOT = { NOT = { has_tech = radio_detection } }
		}
	}

	project_output = {
		enable_equipments = {
			limit = {
				has_dlc = "Gotterdammerung"
			}
			ballistic_missile_equipment_1
		}
		enable_equipments = {
			limit = {
				NOT = { has_dlc = "Gotterdammerung" }
			}
			guided_missile_equipment_3
		}
		
	}

	generic_prototype_rewards = {
		sp_rockets_scientist_xp_generic_reward
		sp_rockets_political_interference_generic_reward
		sp_rockets_onsite_explosion_generic_reward
		sp_rockets_generic_major_breakthrough_reward
		sp_rockets_generic_avionics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3	
	}

	unique_prototype_rewards = {
		sp_rocket_wind_tunnel_choice_reward = {
			fire_only_once = yes

			threshold = { 
				min = 0
				max = 20
			}

			weight = {
				base = 1000.0
			}

			option = {
				token = sp_rocket_wind_tunnel_choice_reward_reject
				
				iteration_output = {
					country_effects = {
						
					}
				}
			}

			option = {
				token = sp_rocket_wind_tunnel_choice_reward_agree
				
				iteration_output = {
					country_effects = {
						add_timed_idea = {
							idea = special_project_consumer_costs_medium
							days = 365
						}
						FROM = { add_project_progress_ratio = constant:sp_progress.gain.low }
					}
				}
			}
		}
	}
}

sp_rockets_improved_ballistic_missile = {
	specialization = specialization_air 
	icon = GFX_sp_rockets_medium_range_ballistic_missiles
	
	breakthrough_cost = {
		specialization_air = 2
	}
	
	project_tags = sp_tag_rocket

	complexity = sp_complexity.large
	
	prototype_time = sp_time.prototype.medium	

	resource_cost = {
		resources = {
			steel = 12
			aluminium = 12
			chromium = 6
			rubber = 6
		}
	}

	special_project_parent = {
		sp_rockets_early_ballistic_missile
	}

	available = { 
		FROM = {
			has_tech = improved_rocket_engines
		}
	}

	ai_will_do = {
		base = 1
	}

	project_output = {
		enable_equipments = {
			limit = {
				has_dlc = "Gotterdammerung"
			}
			ballistic_missile_equipment_2
		}
		enable_equipments = {
			limit = {
				NOT = { has_dlc = "Gotterdammerung" }
			}
			guided_missile_equipment_4
		}
		
	}

	generic_prototype_rewards = {
		sp_rockets_scientist_xp_generic_reward
		sp_rockets_political_interference_generic_reward
		sp_rockets_onsite_explosion_generic_reward
		sp_rockets_generic_major_breakthrough_reward
		sp_rockets_generic_avionics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3		
	}

	unique_prototype_rewards = {
		sp_rocket_turbo_pump_froth_reward = {
			fire_only_once = yes

			threshold = { 
				min = 40
				max = 70
			}

			weight = {
				base = 10
			}

			option = {
				token = sp_rocket_turbo_pump_froth_reward_accept
				
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
					}
					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.low
							specialization = specialization_air
						}
					}
				}
			}
		}	

		sp_rocket_relay_failure_reward = {
			fire_only_once = yes

			threshold = { 
				min = 70
				max = 95
			}

			weight = {
				base = 10
			}

			option = {
				token = sp_rocket_relay_failure_reward_accept
				
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.loss.low }
					}
				}
			}

			option = {
				token = sp_rocket_relay_failure_reward_reject
				iteration_output = {
					country_effects = {
						hidden_effect = {
							set_country_flag = refused_to_replace_relay_flag
						}
					}
				}
			}
		}
	}
}