#	Example:
# 
#	example_trigger = {
#		tag = GER
#		is_ai = no
#	}
#
#
#	In a script file:
#
#	trigger = {
#		exampel_trigger = yes
#	}
#

equipment_intro_alert = {
	#################
	# HMG Equipment #
	#################
	if = {
		limit = {
			has_tech = hmg
			NOT = { has_country_flag = HMG_equipment_intro/complete }
		}
		if = {
			limit = {
				NOT = { has_country_flag = HMG_equipment_intro/infantry_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		if = {
			limit = {
				NOT = { has_country_flag = HMG_equipment_intro/mobile_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		if = {
			limit = {
				NOT = { has_country_flag = HMG_equipment_intro/special_forces_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		
		
	}

	####################
	# Mortar Equipment #
	####################
	if = {
		limit = {
			has_tech = mortars
			NOT = { has_country_flag = mortar_equipment_intro/complete }
		}
		if = {
			limit = {
				NOT = { has_country_flag = mortar_equipment_intro/infantry_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		if = {
			limit = {
				NOT = { has_country_flag = mortar_equipment_intro/mobile_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		if = {
			limit = {
				NOT = { has_country_flag = mortar_equipment_intro/special_forces_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		
	}
	
	###################
	# Radio Equipment #
	###################
	if = {
		limit = {
			has_tech = radio_technology
			NOT = { has_country_flag = radio_equipment_intro/complete }
		}
		if = {
			limit = {
				NOT = { has_country_flag = radio_equipment_intro/support_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		if = {
			limit = {
				has_tech = infantry_radio
				NOT = { has_country_flag = radio_equipment_intro/special_forces_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		if = {
			limit = {
				has_tech = vehicle_radio
				NOT = { has_country_flag = radio_equipment_intro/mobile_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		if = {
			limit = {
				has_tech = infantry_radio
				NOT = { has_country_flag = radio_equipment_intro/infantry_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}

		
		
	}
	
	
	#########################
	# handheld_at_equipment #
	#########################
	if = {
		limit = {
			has_tech = infantry_at
			NOT = { has_country_flag = handheld_at_equipment_intro/complete }
		}
		if = {
			limit = {
				NOT = { has_country_flag = handheld_at_equipment_intro/infantry_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		if = {
			limit = {
				NOT = { has_country_flag = handheld_at_equipment_intro/mobile_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		if = {
			limit = {
				NOT = { has_country_flag = handheld_at_equipment_intro/special_forces_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		
	}

	##########################
	# Infantry Gun Equipment #
	##########################
	if = {
		limit = {
			has_tech = infantry_guns
			NOT = { has_country_flag = infantrygun_equipment_intro/complete }
		}
		if = {
			limit = {
				NOT = { has_country_flag = infantrygun_equipment_intro/infantry_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		
		if = {
			limit = {
				NOT = { has_country_flag = infantrygun_equipment_intro/mobile_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		
		
	}

	##################
	# Mechanized HMG #
	##################
	if = {
		limit = {
			has_tech = mechanized_hmg_tech
			NOT = { has_country_flag = mechanized_hmg_intro/complete }
		}
		if = {
			limit = {
				NOT = { has_country_flag = mechanized_hmg_intro/mobile_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		
	}

	#####################
	# Mechanized Mortar #
	#####################
	if = {
		limit = {
			has_tech = mechanized_mortar_tech
			NOT = { has_country_flag = mechanized_mortar_intro/complete }
		}
		if = {
			limit = {
				NOT = { has_country_flag = mechanized_mortar_intro/mobile_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		
	}
	
	#################
	# Mechanized AA #
	#################
	if = {
		limit = {
			has_tech = mechanized_aa_tech
			NOT = { has_country_flag = mechanized_aa_intro/complete }
		}
		if = {
			limit = {
				NOT = { has_country_flag = mechanized_aa_intro/mobile_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		
	}
	
	#################
	# Mechanized AT #
	#################
	if = {
		limit = {
			has_tech = mechanized_at_tech
			NOT = { has_country_flag = mechanized_at_intro/complete }
		}
		if = {
			limit = {
				NOT = { has_country_flag = mechanized_at_intro/mobile_group }
			}
			add_to_temp_variable = { num_alerts = 1 }
		}
		
		
	}
}

HTD_army_can_unlock = {
	
	if = {
		limit = {
			meta_trigger = {
				text = {    
					has_country_flag = HTD_[X]_[Y]
				}
				X = "[?HTD_target.GetTag]"
				Y = "[?v.GetTokenKey]" 
			}  
		}
		set_temp_variable = { tech_status = 3 }
		if = {
			limit = {
				meta_trigger = {
					text = {   
						HTD_[X]_[Y] = yes
					}
					X = "[?HTD_target.GetTag]"
					Y = "[?v.GetTokenKey]"
				}
			}
		} 
	}
	else_if = {
		limit = { NOT = { has_country_flag = HTD_skip_trigger } }
		meta_trigger = {
			text = {   
				HTD_[X]_[Y] = yes
			}
			X = "[?HTD_target.GetTag]"
			Y = "[?v.GetTokenKey]"
		}
		custom_trigger_tooltip = {
			tooltip = HTD_xp_requirement_tooltip
			
			has_army_experience > xp_cost 
		}
		set_temp_variable = { tech_status = 2 }
	}
	else = {
		set_temp_variable = { tech_status = 2 }
	}
	
	if = { #if enough xp the xp text becomes green
		limit = {
			check_variable = { army_experience > xp_cost }
		}
		set_temp_variable = { xp_true = 1 } 
	}		
	
}
HTD_navy_can_unlock = {

	if = {
		limit = {
			meta_trigger = {
				text = {    
					has_country_flag = HSD_[X]_[Y]
				}
				X = "[?HTD_target.GetTag]"
				Y = "[?v.GetTokenKey]" 
			}
		}
		set_temp_variable = { tech_status = 3 }
		if = {
			limit = {
				meta_trigger = {
					text = {   
						HSD_[X]_[Y]_button_trigger = yes
					}
					X = "[?HTD_target.GetTag]"
					Y = "[?v.GetTokenKey]"
				}
			}
		}
	} 
	else_if = {
		limit = { NOT = { has_country_flag = HTD_skip_trigger } }
		meta_trigger = {
			text = {   
				HSD_[X]_[Y]_button_trigger = yes
			}
			X = "[?HTD_target.GetTag]"
			Y = "[?v.GetTokenKey]"
		}
		custom_trigger_tooltip = {
			tooltip = HSD_xp_requirement_tooltip
			
			has_navy_experience > xp_cost 
		}
		set_temp_variable = { tech_status = 2 }
	}
	else = {
		set_temp_variable = { tech_status = 2 }
	}
	
	if = { #if enough xp the xp text becomes green
		limit = {
			check_variable = { navy_experience > xp_cost }
		}
		set_temp_variable = { xp_true = 1 } 
	}		
}

HTD_adjust_position = {
	multiply_temp_variable = { tech_x = 70 }
	multiply_temp_variable = { tech_y = 70  } 
 
	set_temp_variable = { pos_fix = i }
	add_to_temp_variable = { pos_fix = 1 }
	multiply_temp_variable = { pos_fix = -240 }
	add_to_temp_variable = { tech_x = pos_fix }

	#log = "======================" 
	#log = "[?v.GetTokenKey] EQUIPMENT"
	#log = "[?tech_x_@THIS] X POS"
	
	if = {
		limit = {
			has_country_flag = HED_armor
		}
			
		if = {
			limit = {
				check_variable = { subtech > 5 }
			}
			add_to_temp_variable = { tech_x = 201 } 
			add_to_temp_variable = { tech_y = 54 }
			
			set_temp_variable = { subicon_x = tech_x }
			add_to_temp_variable = { subicon_x = 5 }  
			  
			set_temp_variable = { subicon_y = tech_y }
			add_to_temp_variable = { subicon_y = 3 }  
			
		}
		else_if = {
			limit = {
				check_variable = { subtech > 4 }
			}
			add_to_temp_variable = { tech_x = 201 } 
			add_to_temp_variable = { tech_y = 26 }
				
			set_temp_variable = { subicon_x = tech_x }
			add_to_temp_variable = { subicon_x = 5 }  
			  
			set_temp_variable = { subicon_y = tech_y }
			add_to_temp_variable = { subicon_y = 3 }  
			
		}
		else_if = {
			limit = {
				check_variable = { subtech > 3 }
			}
			add_to_temp_variable = { tech_x = 201 }
				
			set_temp_variable = { subicon_x = tech_x }
			add_to_temp_variable = { subicon_x = 5 }  
			  
			set_temp_variable = { subicon_y = tech_y }
			add_to_temp_variable = { subicon_y = 3 }  
			 
		}
		else_if = {
			limit = {
				check_variable = { subtech > 2 }
			}
			add_to_temp_variable = { tech_x = 163 } 
			add_to_temp_variable = { tech_y = 54 }
			
			set_temp_variable = { subicon_x = tech_x }
			add_to_temp_variable = { subicon_x = 5 }  
			  
			set_temp_variable = { subicon_y = tech_y }
			add_to_temp_variable = { subicon_y = 3 }  
			
		}
		else_if = {
			limit = {
				check_variable = { subtech > 1 }
			}
			add_to_temp_variable = { tech_x = 163 } 
			add_to_temp_variable = { tech_y = 26 }
				
			set_temp_variable = { subicon_x = tech_x }
			add_to_temp_variable = { subicon_x = 5 }  
			  
			set_temp_variable = { subicon_y = tech_y }
			add_to_temp_variable = { subicon_y = 3 }  
			
		}
		else_if = {
			limit = {
				check_variable = { subtech > 0 }
			}
			add_to_temp_variable = { tech_x = 163 }
				
			set_temp_variable = { subicon_x = tech_x }
			add_to_temp_variable = { subicon_x = 5 }  
			  
			set_temp_variable = { subicon_y = tech_y }
			add_to_temp_variable = { subicon_y = 3 }  
			 
		}
	}
	else = {
		if = {
			limit = {
				check_variable = { subtech > 5 }
			}
			add_to_temp_variable = { tech_x = 330 }
			add_to_temp_variable = { tech_y = 56 }
			
			set_temp_variable = { subicon_x = tech_x }
			add_to_temp_variable = { subicon_x = 5 }  
			  
			set_temp_variable = { subicon_y = tech_y }
			add_to_temp_variable = { subicon_y = 3 }  
			
		}
		else_if = {
			limit = {
				check_variable = { subtech > 4 }
			}
			add_to_temp_variable = { tech_x = 330 }
			add_to_temp_variable = { tech_y = 30 }
				
			set_temp_variable = { subicon_x = tech_x }
			add_to_temp_variable = { subicon_x = 5 }  
			  
			set_temp_variable = { subicon_y = tech_y }
			add_to_temp_variable = { subicon_y = 3 }  
			
		}
		else_if = {
			limit = {
				check_variable = { subtech > 3 }
			}
			add_to_temp_variable = { tech_x = 330 }
			add_to_temp_variable = { tech_y = 4 }
				
			set_temp_variable = { subicon_x = tech_x }
			add_to_temp_variable = { subicon_x = 5 }  
			  
			set_temp_variable = { subicon_y = tech_y }
			add_to_temp_variable = { subicon_y = 3 }  
			 
		}
		else_if = {
			limit = {
				check_variable = { subtech > 2 }
			}
			add_to_temp_variable = { tech_x = 290 }
			add_to_temp_variable = { tech_y = 56 }
			
			set_temp_variable = { subicon_x = tech_x }
			add_to_temp_variable = { subicon_x = 5 }  
			  
			set_temp_variable = { subicon_y = tech_y }
			add_to_temp_variable = { subicon_y = 3 }  
			
		}
		else_if = {
			limit = {
				check_variable = { subtech > 1 }
			}
			add_to_temp_variable = { tech_x = 290 }
			add_to_temp_variable = { tech_y = 30 }
				
			set_temp_variable = { subicon_x = tech_x }
			add_to_temp_variable = { subicon_x = 5 }  
			  
			set_temp_variable = { subicon_y = tech_y }
			add_to_temp_variable = { subicon_y = 3 }  
			
		}
		else_if = {
			limit = {
				check_variable = { subtech > 0 }
			}
			add_to_temp_variable = { tech_x = 290 }
			add_to_temp_variable = { tech_y = 4 }
				
			set_temp_variable = { subicon_x = tech_x }
			add_to_temp_variable = { subicon_x = 5 }  
			  
			set_temp_variable = { subicon_y = tech_y }
			add_to_temp_variable = { subicon_y = 3 }  
			 
		}
	}
	
	set_temp_variable = { name_x = tech_x }
	add_to_temp_variable = { name_x = 7 }  
	
	set_temp_variable = { name_y = tech_y } 
	  
	set_temp_variable = { cost_y = name_y }
	add_to_temp_variable = { cost_y = -25 }  
	
	set_temp_variable = { icon_x = name_x }
	add_to_temp_variable = { icon_x = 91 }  
	
	set_temp_variable = { icon_y = name_y }
	add_to_temp_variable = { icon_y = 50 }  
	
	set_temp_variable = { role_y = tech_y } 
	add_to_temp_variable = { role_y = 24 }  
	set_temp_variable = { role_x = tech_x } 
	add_to_temp_variable = { role_x = 8 }  
	
	set_temp_variable = { cost_bg_x = name_x }
	add_to_temp_variable = { cost_bg_x = -6 }
	
	set_temp_variable = { cost_bg_y = cost_y }
	add_to_temp_variable = { cost_bg_y = 2 }
	
	if = {
		limit = {
			NOT = { has_country_flag = HED_armor }
		}
		add_to_temp_variable = { icon_x = 70 }
		add_to_temp_variable = { icon_y = -11 }
	}
}

major_country = { # true majors in the game
	has_country_flag = original_major_country
}

can_ROOT_get_wargoal_on_THIS = {
	exists = yes
	NOT = { is_in_faction_with = ROOT }
	NOT = { is_subject_of = ROOT }
}

#Country scope
is_JAP_or_ally_of_JAP = {
	is_ally_with = JAP
}

is_border_conflict_defender_vs_FROM = {
	has_variable = ROOT.defender_state_vs_@FROM
}

has_not_initiated_border_incident_with_FROM = {
	custom_trigger_tooltip = {
		tooltip = not_initiated_border_incident_with_FROM
		NOT = {		
			any_state = {
				check_variable = { FROM.defender_state_vs_@PREV = id }
			}
		}
	}
}

has_not_initiated_border_incident_with_ROOT = {
	custom_trigger_tooltip = {
		tooltip = not_initiated_border_incident_with_ROOT
		NOT = {
			any_state = {
				check_variable = { ROOT.defender_state_vs_@PREV = id }
			}
		}
	}
}

#State scope
has_ROOT_at_least_1_div_in_current_state_scope = {
	custom_trigger_tooltip = {
		tooltip = at_least_one_division_in_state
		ROOT = { divisions_in_state = { state = PREV size > 0 } }
	}
}
no_border = {
	NOT = { any_neighbor_state = { NOT = { is_controlled_by_PREV_or_ally = yes } } }
}
no_enemy_border = {
	NOT = { any_neighbor_state = { CONTROLLER = { has_war_with = ROOT } } }
}

#Country scope
is_free_or_subject_of_root = {
	OR = {
		is_subject = no
		is_subject_of = ROOT
	}
}

#State scope
is_fully_controlled_by_ROOT_or_ally = {
	custom_trigger_tooltip = {
		tooltip = is_fully_controlled_by_ROOT_or_ally
		is_fully_controlled_by = CONTROLLER
		CONTROLLER = {
			OR = {
				tag = ROOT
				is_in_faction_with = ROOT 
				is_subject_of = ROOT
			}
				
		}
	}
}
is_controlled_by_ROOT_or_ally = {
	custom_trigger_tooltip = {
		tooltip = is_controlled_by_ROOT_or_ally
		CONTROLLER = {
			OR = {
				tag = ROOT
				is_in_faction_with = ROOT 
				is_subject_of = ROOT
			}
		}
	}
}
is_controlled_by_PREV_or_ally = {
	custom_trigger_tooltip = {
		tooltip = is_controlled_by_PREV_or_ally
		CONTROLLER = {
			OR = {
				tag = ROOT
				is_in_faction_with = ROOT 
				is_subject_of = ROOT
			}
		}
	}
}
is_fully_controlled_by_PREV_or_ally = {
	custom_trigger_tooltip = {
		tooltip = is_fully_controlled_by_PREV_or_ally
		is_fully_controlled_by = CONTROLLER
		CONTROLLER = {
			OR = {
				tag = ROOT
				is_in_faction_with = ROOT 
				is_subject_of = ROOT
			}
		}
	}
}

is_controlled_by_ROOT_or_subject = {
	custom_trigger_tooltip = {
		tooltip = is_controlled_by_ROOT_or_subject
		CONTROLLER = {
			OR = {
				tag = ROOT
				is_subject_of = ROOT
			}
		}
	}
}
is_controlled_by_PREV_or_subject = {
	custom_trigger_tooltip = {
		tooltip = is_controlled_by_PREV_or_subject
		CONTROLLER = {
			OR = {
				tag = PREV
				is_subject_of = PREV
			}
		}
	}
}

#State scope
is_owned_by_ROOT_or_ally = {
	custom_trigger_tooltip = {
		tooltip = is_owned_by_ROOT_or_ally
		OWNER = {
			OR = {
				tag = ROOT
				is_in_faction_with = ROOT 
				is_subject_of = ROOT
			}
		}
	}
}
is_owned_by_PREV_or_ally = {
	custom_trigger_tooltip = {
		tooltip = is_owned_by_PREV_or_ally
		OWNER = {
			OR = {
				tag = ROOT
				is_in_faction_with = ROOT 
				is_subject_of = ROOT
			}
		}
	}
}

is_owned_by_ROOT_or_subject = {
	custom_trigger_tooltip = {
		tooltip = is_owned_by_ROOT_or_subject
		OWNER = {
			OR = {
				tag = ROOT
				is_subject_of = ROOT
			}
		}
	}
}
is_owned_by_PREV_or_subject = {
	custom_trigger_tooltip = {
		tooltip = is_owned_by_PREV_or_subject
		OWNER = {
			OR = {
				tag = PREV
				is_subject_of = PREV
			}
		}
	}
}
is_csa_state = {
	OR = {
		state = 366
		state = 365
		state = 367
		state = 370
		state = 362
		state = 363
		state = 364
		state = 371
		state = 375
		state = 368
		state = 372
	}
}

has_naval_treaty_trigger = {
	has_country_flag = naval_treaty_participant
}

CHI_is_on_historical_plan_trigger = {
	has_dlc = "Waking the Tiger"
	OR = {
		has_country_flag = CHI_AI_RANDOM_HISTORICAL
	}
}
SOV_is_on_historical_plan_trigger = {
	OR = {
		has_country_flag = SOV_AI_RANDOM_COMMUNIST_HISTORICAL

	}
}
USA_is_on_historical_plan_trigger = {
	OR = {
		has_country_flag = USA_AI_DEMOCRATIC_HISTORICAL

	}
}
ROM_is_on_historical_plan_trigger = {
	has_dlc = "Death or Dishonor"
	OR = {
		has_country_flag = ROM_AI_RANDOM_FASCIST_HISTORICAL

	}
}
HUN_is_on_historical_plan_trigger = {
	OR = {
		has_country_flag = HUN_AI_RANDOM_FASCIST_HISTORICAL
		has_game_rule = {
			rule = HUN_ai_behavior
			option = HISTORICAL_HUN_FLAVOR
		}
	}
}
ENG_is_on_historical_plan_trigger = {
	OR = {
		has_country_flag = ENG_AI_DEMOCRATIC_HISTORICAL

	}
}

SOV_save_pp_for_manpower_trouble = {
	has_manpower < 1000000
	has_political_power < 200
	surrender_progress > 0	
}

has_ww1_doctrine_researched = {
	has_tech = ww1_infantry
	has_tech = infantry_charge
	has_tech = night_patrols
	has_tech = dispersed_infantry_attacks
	has_tech = infiltration_attacks
	has_tech = stormtroopers
	has_tech = complex_trench_systems
	has_tech = offensive_trenches
	has_tech = defensive_trenches
	has_tech = reserve_trenches
	has_tech = communication_trenches
	has_tech = logistics_trenches
	has_tech = barbed_wire
	has_tech = pillboxes
	has_tech = sniper_pits
	has_tech = nomans_land_saps
	has_tech = tunnel_mines
	has_tech = fortress_trenches
	has_tech = basic_MG_defences
	has_tech = multiple_MG_nests
	has_tech = enfilade_MG_fire_fields
	has_tech = infantry_MG_coordination
	has_tech = ww1_artillery
	has_tech = artillery_concentration
	has_tech = offensive_prep_fire
	has_tech = continuous_fire
	has_tech = harassment_fire
	has_tech = rear_area_bombardment
	has_tech = dummy_barrage
	has_tech = standing_barrage
	has_tech = box_barrage
	has_tech = block_barrage
	has_tech = creeping_barrage
	has_tech = rolling_barrage
	has_tech = artillery_observers
	has_tech = balloon_observers
	has_tech = aircraft_observers
	has_tech = foot_runners
	has_tech = carrier_pidgeons
	has_tech = telephone_communications
	has_tech = mobile_doctrines
	has_tech = cavalry_charges 
	has_tech = cavalry_dismounting 
	has_tech = cavalry_exploitation
	has_tech = armor_support 
	has_tech = infantry_tank_coordination 
	has_tech = infantry_tank_artillery_coordination 
	has_tech = anti_tank_traps 
	has_tech = infantry_AT_defences 
	has_tech = armored_car_recon 
	has_tech = motorcycle_liaison 
	has_tech = staff_officer_vehicles 
	has_tech = ww1_battlefield_support 
	has_tech = battlefield_commissions 
	has_tech = weather_reporting 
	has_tech = terrain_mapping 
	has_tech = camouflage_positions 
	has_tech = AA_positions 
	has_tech = first_aid_stations
	
	#Air
	has_tech = WW1_air_power
	has_tech = WW1_air_survey
	has_tech = WW1_air_control
	has_tech = WW1_air_bomb
	has_tech = WW1_air_ground
}

is_researching_any_land_doctrine_tech = {
	OR = {
		#WW1
		is_researching_technology = ww1_infantry
		is_researching_technology = infantry_charge
		is_researching_technology = night_patrols
		is_researching_technology = dispersed_infantry_attacks
		is_researching_technology = infiltration_attacks
		is_researching_technology = stormtroopers
		is_researching_technology = complex_trench_systems
		is_researching_technology = offensive_trenches
		is_researching_technology = defensive_trenches
		is_researching_technology = reserve_trenches
		is_researching_technology = communication_trenches
		is_researching_technology = logistics_trenches
		is_researching_technology = barbed_wire
		is_researching_technology = pillboxes
		is_researching_technology = sniper_pits
		is_researching_technology = nomans_land_saps
		is_researching_technology = tunnel_mines
		is_researching_technology = fortress_trenches
		is_researching_technology = basic_MG_defences
		is_researching_technology = multiple_MG_nests
		is_researching_technology = enfilade_MG_fire_fields
		is_researching_technology = infantry_MG_coordination
		is_researching_technology = ww1_artillery
		is_researching_technology = artillery_concentration
		is_researching_technology = offensive_prep_fire
		is_researching_technology = continuous_fire
		is_researching_technology = harassment_fire
		is_researching_technology = rear_area_bombardment
		is_researching_technology = dummy_barrage
		is_researching_technology = standing_barrage
		is_researching_technology = box_barrage
		is_researching_technology = block_barrage
		is_researching_technology = creeping_barrage
		is_researching_technology = rolling_barrage
		is_researching_technology = artillery_observers
		is_researching_technology = balloon_observers
		is_researching_technology = aircraft_observers
		is_researching_technology = foot_runners
		is_researching_technology = carrier_pidgeons
		is_researching_technology = telephone_communications
		is_researching_technology = mobile_doctrines
		is_researching_technology = cavalry_charges 
		is_researching_technology = cavalry_dismounting 
		is_researching_technology = cavalry_exploitation
		is_researching_technology = armor_support 
		is_researching_technology = infantry_tank_coordination 
		is_researching_technology = infantry_tank_artillery_coordination 
		is_researching_technology = anti_tank_traps 
		is_researching_technology = infantry_AT_defences 
		is_researching_technology = armored_car_recon 
		is_researching_technology = motorcycle_liaison 
		is_researching_technology = staff_officer_vehicles 
		is_researching_technology = ww1_battlefield_support 
		is_researching_technology = battlefield_commissions 
		is_researching_technology = weather_reporting 
		is_researching_technology = terrain_mapping 
		is_researching_technology = camouflage_positions 
		is_researching_technology = AA_positions 
		is_researching_technology = first_aid_stations
		
		is_researching_technology = WW1_air_power
		is_researching_technology = WW1_air_survey
		is_researching_technology = WW1_air_control
		is_researching_technology = WW1_air_bomb
		is_researching_technology = WW1_air_ground
		#WW2
		is_researching_technology = mobile_warfare
		is_researching_technology = delay
		is_researching_technology = elastic_defence
		is_researching_technology = mobile_infantry
		is_researching_technology = mass_motorization
		is_researching_technology = mechanised_offensive
		is_researching_technology = armored_spearhead
		is_researching_technology = schwerpunk
		is_researching_technology = blitzkrieg
		is_researching_technology = kampfgruppe
		is_researching_technology = firebrigades
		is_researching_technology = backhand_blow
		is_researching_technology = modern_blitzkrieg
		is_researching_technology = volkssturm
		is_researching_technology = nd_conscription
		is_researching_technology = werwolf_guerillas
		is_researching_technology = superior_firepower
		#is_researching_technology = sup_delay
		is_researching_technology = mobile_defence
		#is_researching_technology = integrated_support
		is_researching_technology = regimental_combat_teams
		is_researching_technology = dispersed_support
		is_researching_technology = overwhelming_firepower
		#is_researching_technology = sup_mechanized_offensive
		is_researching_technology = concentrated_fire_plans
		is_researching_technology = combined_arms
		is_researching_technology = tactical_control
		is_researching_technology = air_land_battle
		is_researching_technology = centralized_fire_control
		is_researching_technology = forward_observers
		is_researching_technology = advanced_firebases
		is_researching_technology = shock_and_awe
		is_researching_technology = trench_warfare
		is_researching_technology = grand_battle_plan
		is_researching_technology = prepared_defense
		is_researching_technology = grand_assault
		#is_researching_technology = grand_mechanized_offensive
		is_researching_technology = assault_concentration
		is_researching_technology = branch_interoperation
		is_researching_technology = assault_breakthrough
		is_researching_technology = central_planning
		is_researching_technology = c3i_theory
		#is_researching_technology = infantry_offensive
		is_researching_technology = armored_operations
		is_researching_technology = infiltration_assault
		is_researching_technology = night_assault_tactics
		is_researching_technology = attritional_containment
		is_researching_technology = infiltration_in_depth
		is_researching_technology = mass_assault
		is_researching_technology = pocket_defence
		is_researching_technology = defence_in_depth
		is_researching_technology = large_front_operations
		is_researching_technology = deep_operations
		is_researching_technology = operational_concentration
		is_researching_technology = vast_offensives
		is_researching_technology = breakthrough_priority
		is_researching_technology = mechanized_wave
		is_researching_technology = continuous_offensive
		is_researching_technology = peoples_army
		is_researching_technology = human_infantry_offensive
		is_researching_technology = large_front_offensive
		is_researching_technology = human_wave_offensive
		is_researching_technology = guerilla_warfare
		#Rip Performance? Havent used this trigger before.
	}
}

is_researching_any_air_doctrine_tech = {
	OR = {
		is_researching_technology = air_superiority
		is_researching_technology = infrastructure_destruction	 
		is_researching_technology = home_defence
		is_researching_technology = naval_strike_tactics
		is_researching_technology = fighter_sweeps
		is_researching_technology = dogfighting_experience
		is_researching_technology = multialtitude_flying
		is_researching_technology = logistical_bombing
		is_researching_technology = night_bombing
		is_researching_technology = day_bombing
		is_researching_technology = massed_bomber_formations
		is_researching_technology = air_offense
		is_researching_technology = flying_fortress
		is_researching_technology = offensive_formations
		is_researching_technology = mass_destruction
		is_researching_technology = formation_flying
		is_researching_technology = dive_bombing
		is_researching_technology = direct_ground_support
		is_researching_technology = formation_fighting
		is_researching_technology = fighter_ace_initiative
		is_researching_technology = hunt_and_destroy
		is_researching_technology = combat_unit_destruction
		is_researching_technology = battlefield_support
		is_researching_technology = keypoint_bombing
		is_researching_technology = ground_support_integration
		is_researching_technology = naval_strike_torpedo_tactics
		is_researching_technology = strategic_destruction
		is_researching_technology = forward_interception
		is_researching_technology = force_rotation
		is_researching_technology = fighter_baiting
		is_researching_technology = low_echelon_support
		is_researching_technology = dispersed_fighting
		is_researching_technology = operational_destruction
		is_researching_technology = fighter_veteran_initiative
		is_researching_technology = naval_strike_torpedo_tactics_oi
		is_researching_technology = cas_veteran_initiative
		is_researching_technology = carousel_bombing
		is_researching_technology = infiltration_bombing
		is_researching_technology = air_skirmish
		is_researching_technology = high_level_bombing
	}
}

is_researching_any_naval_doctrine_tech = {
	OR = {
		is_researching_technology = nrm_pre_ww1_naval_doctrine
		is_researching_technology = nrm_mahanian_concepts
		is_researching_technology = nrm_jeune_ecole_concepts
		is_researching_technology = nrm_commerce_warfare
		is_researching_technology = nrm_battlefleet_concentration
		is_researching_technology = nrm_scouting_force
		is_researching_technology = nrm_fleet_formation
		is_researching_technology = nrm_fleet_coordination
		is_researching_technology = nrm_cruiser_warfare
		is_researching_technology = nrm_cruiser_battleline_support
		is_researching_technology = nrm_cruiser_flotilla_leader
		is_researching_technology = nrm_independent_cruiser_operation
		is_researching_technology = nrm_cruiser_patrols
		is_researching_technology = nrm_destroyer_support
		is_researching_technology = nrm_destroyer_screen
		is_researching_technology = nrm_destroyer_torpedo_tactics
		is_researching_technology = nrm_independent_destroyer_operation
		is_researching_technology = nrm_destroyer_fleet_operations
		is_researching_technology = nrm_destroyer_patrol_operations
		is_researching_technology = nrm_destroyer_screen_improved
		is_researching_technology = nrm_destroyer_asw_tactics
		is_researching_technology = nrm_destroyer_torpedo_advanced
		is_researching_technology = nrm_destroyer_aa_escort
		is_researching_technology = nrm_destroyer_hunter_killer
		is_researching_technology = nrm_destroyer_advanced_tactics
		is_researching_technology = nrm_trade_protection
		is_researching_technology = nrm_escort_patrols
		is_researching_technology = nrm_convoy_sailing
		is_researching_technology = nrm_carrier_convoy
		is_researching_technology = nrm_integrated_convoy_defence
		is_researching_technology = nrm_submarine_tactics_early
		is_researching_technology = nrm_submarine_raiding
		is_researching_technology = nrm_submarine_torpedo_tactics
		is_researching_technology = nrm_submarine_offensive_operations
		is_researching_technology = nrm_submarine_fleet_operations
		is_researching_technology = nrm_submarine_raiding_improved
		is_researching_technology = nrm_submarine_scouting
		is_researching_technology = nrm_submarine_tactics_improved
		is_researching_technology = nrm_submarine_torpedo_improved
		is_researching_technology = nrm_submarine_unrestricted
		is_researching_technology = nrm_submarine_long_range
		is_researching_technology = nrm_submarine_evasion
		is_researching_technology = nrm_submarine_wolfpack
		is_researching_technology = nrm_submarine_tactics_advanced
		is_researching_technology = nrm_decisive_battle
		is_researching_technology = nrm_db_offensive_tactics
		is_researching_technology = nrm_db_battleline_tactics
		is_researching_technology = nrm_db_cruiser_torpedo
		is_researching_technology = nrm_db_combined_carrier
		is_researching_technology = nrm_db_heavy_scouting
		is_researching_technology = nrm_db_forward_operations
		is_researching_technology = nrm_db_grand_battlefleet
		is_researching_technology = nrm_fleet_in_being
		is_researching_technology = nrm_fib_power_projection
		is_researching_technology = nrm_fib_sealane_defence
		is_researching_technology = nrm_fib_forward_basing
		is_researching_technology = nrm_fib_patrol_operation
		is_researching_technology = nrm_fib_fast_carrier_tf
		is_researching_technology = nrm_fib_floating_fortress
		is_researching_technology = nrm_fib_defensive_formation
		is_researching_technology = nrm_fib_flexible_operations
		is_researching_technology = nrm_fib_modern_battlefleet
		is_researching_technology = nrm_trade_interdiction
		is_researching_technology = nrm_ti_raider_patrols
		is_researching_technology = nrm_ti_capital_raiders
		is_researching_technology = nrm_ti_extended_range
		is_researching_technology = nrm_ti_combined_raiding
		is_researching_technology = nrm_ti_carrier_raiding
		is_researching_technology = nrm_mine_warfare
		is_researching_technology = nrm_mine_warfare_2
		is_researching_technology = nrm_fleet_train
		is_researching_technology = nrm_replenishment_sea
		is_researching_technology = nrm_replenishment_underway
		is_researching_technology = nrm_naval_aviation
		is_researching_technology = nrm_carrier_experiments
		is_researching_technology = nrm_carrier_independent
		is_researching_technology = nrm_carrier_integrated
		is_researching_technology = nrm_carrier_development
		is_researching_technology = nrm_carrier_offensive
		is_researching_technology = nrm_carrier_scouting
		is_researching_technology = nrm_carrier_defensive
		is_researching_technology = nrm_carrier_taskforce
		is_researching_technology = nrm_carrier_support
		is_researching_technology = nrm_carrier_operations
		is_researching_technology = nrm_carrier_strike
		is_researching_technology = nrm_carrier_defence
		is_researching_technology = nrm_carrier_operations_advanced
		is_researching_technology = nrm_carrier_deck_operations
		is_researching_technology = nrm_carrier_deck_park
		is_researching_technology = nrm_carrier_deck_advanced
	}
}	

is_mod_country = {
	has_country_flag = debug_country
}

safe_state = {
	NOT = {
		any_neighbor_state = {
			is_controlled_by_ROOT_or_ally = yes 
			ROOT = { 
				any_enemy_country = {
					divisions_in_state = {
						state = PREV.PREV 
						size > 0 
					}
				}
			}
		}
	}
}

anti_submarine_strategy_required = {
	OR = {
		AND = {
			tag = ENG
			not = { is_in_faction_with = GER }
			GER = {
				has_navy_size = {
					type = submarine
					size > 30
				}
			}
		}
		AND = {
			tag = USA
			not = { is_in_faction_with = GER }
			GER = {
				has_navy_size = {
					type = submarine
					size > 30
				}
			}
		}
		AND = {
			tag = JAP
			not = { is_in_faction_with = USA }
		}
		AND = {
			has_war = yes
			any_enemy_country = {
				has_navy_size = {
					type = submarine
					size > 30
				}
			}
		}
		convoy_threat > 0.3
	}
}
anti_submarine_strategy_required_trigger = {
	has_country_flag = anti_submarine_strategy_required
}

has_FROM = {
	ROOT = { NOT = { tag = FROM } }
}

check_field_strength_trigger = {
	custom_trigger_tooltip = {
		tooltip = FIELD_STRENGTH_TRIGGER
		
		check_variable = { 
			var = field_strength 
			value = field_strength_trigger
			compare = greater_than_or_equals
		}
	}
}

check_army_strength_trigger = {
	custom_trigger_tooltip = {
		tooltip = ARMY_STRENGTH_TRIGGER
		
		check_variable = { 
			var = army_strength 
			value = army_strength_trigger
			compare = greater_than_or_equals
		}
	}
}

has_war_with_original_major = {
	has_country_flag = war_with_major
}
has_war_with_player = {
	has_country_flag = war_with_player
}
enemy_has_equal_or_better_radar_tech_trigger = {
	custom_trigger_tooltip = {
		tooltip = enemy_has_equal_or_better_radar_tech_trigger_tt
		if = {
			limit = {
				ROOT = { 
					has_tech = radio_detection 
					NOT = {
						has_tech = decimetric_radar
					}
				} 
			}
			FROM = { 
				OR = {
					has_tech = radio_detection 
					has_tech = decimetric_radar
				}
			}
		}
		else_if = {
			limit = {
				ROOT = { 
					has_tech = decimetric_radar 
					NOT = {
						has_tech = improved_decimetric_radar
					}
				} 
			}
			FROM = { 
				OR = {
					has_tech = decimetric_radar 
					has_tech = improved_decimetric_radar
				}
			}
		}
		else_if = {
			limit = {
				ROOT = { 
					has_tech = improved_decimetric_radar 
					NOT = {
						has_tech = centimetric_radar
					}
				} 
			}
			FROM = { 
				OR = {
					has_tech = improved_decimetric_radar 
					has_tech = centimetric_radar
				}
			}
		}
		else_if = {
			limit = {
				ROOT = { 
					has_tech = centimetric_radar 
					NOT = {
						has_tech = improved_centimetric_radar
					}
				} 
			}
			FROM = { 
				OR = {
					has_tech = centimetric_radar 
					has_tech = improved_centimetric_radar
				}
			}
		}
		else_if = {
			limit = {
				ROOT = { 
					has_tech = improved_centimetric_radar 
					NOT = {
						has_tech = advanced_centimetric_radar
					}
				} 
			}
			FROM = { 
				OR = {
					has_tech = improved_centimetric_radar 
					has_tech = advanced_centimetric_radar
				}
			}
		}
		#no more steps needed because end of research tree is reached
	}
}

is_available_to_collaboration_government = { # occupied_countries.1 should be updated along with this
	FROM = { NOT = { tag = ROOT } }
	any_country_with_original_tag = {
        original_tag_to_check = FROM
        NOT = {
            tag = PREV 
            is_in_faction_with = PREV
            is_subject_of = PREV # if already created one do not create another
            has_autonomy_state = autonomy_collaboration_government
        }
    }
		
}

owns_state_in_europe = {
	has_country_flag = owns_state_in_europe
}
owns_state_in_asia = {
	has_country_flag = owns_state_in_asia
}
owns_state_in_north_america = {
	has_country_flag = owns_state_in_north_america
}
owns_state_in_south_america = {
	has_country_flag = owns_state_in_south_america
}
owns_state_in_middle_east = {
	has_country_flag = owns_state_in_middle_east
}
owns_state_in_africa = {
	has_country_flag = owns_state_in_africa
}
owns_state_in_australia = {
	has_country_flag = owns_state_in_australia
}

is_available_for_focus_building = {
	NOT = { has_state_category = tiny_island }
	NOT = { has_state_category = small_island }
	NOT = { is_island_state = yes }
}

is_upgrading_agency = {
	custom_trigger_tooltip = {
		tooltip = IS_UPGRADING_AGENCY_TT
		check_variable = { modifier@is_upgrading_agency = 1 }
	}
}

focus_wargoal_bypass = {
    OR = {
        exists = no
        is_in_faction_with = ROOT
        is_subject_of = ROOT
        has_war_with = ROOT
    }
}

is_available_fighter_ROOT = {
	OR = {
		AND = {
			OR = {
				has_tech = tech_me_109_fighter_equipment_1 #GER
				has_tech = tech_i_152_equipment_1 #sov
				has_tech = tech_i_16_equipment_3 #sov
				has_tech = tech_spitfire_equipment_1 #Eng
				has_tech = tech_ms_405_fighter_equipment_1 #fra4
				has_tech = tech_cr_41_fighter_equipment_1 #ita
				has_tech = tech_cr_33_fighter_equipment_1 #ita
				has_tech = tech_cr_42_fighter_equipment_1 #ita
				has_tech = tech_g50_fighter_equipment_1 #ita
				has_tech = tech_curtiss_p36_equipment_1	#usa		
			}
			ROOT = { 
				NOT = { has_tech = fighter1} #36
			}
		}
		AND = {
			OR = {
				has_tech = tech_me_109_late_fighter_equipment_1 #GER
				has_tech = tech_yak_1_equipment_1 #sov
				has_tech = tech_lagg_1_equipment_1 #sov
				has_tech = tech_spitfire_equipment_2 #eng
				has_tech = tech_ms_410_fighter_equipment_1 #fra
				has_tech = tech_g50v_fighter_equipment_1 #ita 
				has_tech = tech_ss4_fighter_equipment_1 #ita 
				has_tech = tech_cr_42_daimler_fighter_equipment_1 #ita 
				has_tech = tech_curtiss_p40_equipment_2	#usa
				has_tech = tech_northamerican_mustang_equipment_1	#usa 
			}
			ROOT = { 
				NOT = { has_tech = fighter2} #40
			}
		}
		AND = {
			OR = {
				has_tech = tech_me_109_late_fighter_equipment_4 #GER
				has_tech = tech_lagg_7_equipment_1 #sov
				has_tech = tech_yak_3_equipment_1 # sov
				has_tech = tech_griffon_spitfire_equipment_1 # Eng
				has_tech = tech_sai403_fighter_equipment_1 #ita
				has_tech = tech_g56_fighter_equipment_1 #ita
				has_tech = tech_northamerican_p51d_equipment_1	#usa
				
			}
			ROOT = { 
				NOT = { has_tech = fighter3} #44
			}
		}
	}
	NOT = {
		has_war_with = ROOT
	}
}

is_available_heavy_fighter_ROOT = {
	OR = {
		AND = {
			OR = {
				has_tech = tech_bf_110_fighter_equipment_3 #ger
				has_tech = tech_fw_187_fighter_equipment_1 #ger
				has_tech = tech_me_210_fighter_equipment_1 #ger
				has_tech = tech_cr25_fighter_equipment_1 #ita
				has_tech = tech_ro57_fighter_equipment_1 #ita
				has_tech = tech_pe_1_fighter_equipment_1 #sov
				has_tech = tech_nc_600_fighter_equipment_1 #fra
				has_tech = tech_bristol_beaufighter_equipment_1 #eng
				has_tech = tech_bell_yfm1_equipment_1 #usa
				has_tech = tech_lockheed_p38_equipment_1 #usa
			}
			ROOT = { 
				NOT = { has_tech = heavy_fighter2} #1940
			}
		}
		AND = {
			OR = {
				has_tech = tech_bf_109_z_fighter_equipment_1 #ger
				has_tech = tech_do_335_fighter_equipment_1 #ger
				has_tech = tech_sm91_fighter_equipment_1 #ita
				has_tech = tech_sm92_fighter_equipment_1 #ita
				has_tech = tech_mig_5_fighter_equipment_1 #sov
				has_tech = tech_arsenal_vb10_fighter_equipment_1 #fra
				has_tech = tech_bristol_beaufighter_equipment_2 #eng
				has_tech = tech_mosquito_hvf_equipment_1 #eng
				has_tech = tech_lockheed_p38l_equipment_1 #usa
				has_tech = tech_northamerican_p82_equipment_1 #usa				
			}
			ROOT = { 
				NOT = { has_tech = heavy_fighter3} #1944
			}
		}
	}
	NOT = {
		has_war_with = ROOT
	}
}

is_available_cas_ROOT = {
	OR = {
		AND = {
			OR = {
				has_tech = tech_vultee_a19_equipment_1 #usa
				has_tech = tech_curtiss_a18_equipment_1 #usa
				has_tech = tech_he_118_equipment_1 #ger
				has_tech = tech_ju_87_equipment_1 #ger
				has_tech = tech_r_10_bomber_equipment_1 #sov
				has_tech = tech_su_2_equipment_1 #sov
				has_tech = tech_ca309_light_bomber_equipment_1 #ita
				has_tech = tech_breguet_691_bomber_equipment_1 #fra
				has_tech = tech_fairey_battle_equipment_1 #Eng
			}
			ROOT = { 
				NOT = { has_tech = CAS1} #36
			}
		}
		AND = {
			OR = {
				has_tech = tech_northamerican_a36_equipment_1 #usa
				has_tech = tech_vultee_a31_equipment_1 #usa
				has_tech = tech_douglas_a24_equipment_1 #usa
				has_tech = tech_ju_87_equipment_3 #ger
				has_tech = tech_su_2_equipment_2 #sov
				has_tech = tech_il_2_equipment_1 #sov
				has_tech = tech_ca355_cas_equipment_1 #ita
				has_tech = tech_ba201_cas_equipment_1 #ita
				has_tech = tech_ln_42_CAS_equipment_1 #fra
				has_tech = tech_po_63_11_cas_equipment_1 #fra
				has_tech = tech_hawker_hurricane_iic_equipment_1 #Eng
			}
			ROOT = { 
				NOT = { has_tech = CAS2} #40
			}
		}
		AND = {
			OR = {
				has_tech = tech_douglas_a20_equipment_3 #usa
				has_tech = tech_beechcraft_a38_equipment_1 #usa
				has_tech = tech_curtiss_a25_equipment_1 #usa
				has_tech = tech_fw_190_g_equipment_1 #ger
				has_tech = tech_il_10_equipment_1 #sov
				has_tech = tech_sm93_cas_equipment_1 #ita
				has_tech = tech_hawker_hurricane_iv_equipment_1 #Eng
			}
			ROOT = { 
				NOT = { has_tech = CAS3} #44
			}
		}
	}
	NOT = {
		has_war_with = ROOT
	}
}

is_available_tac_ROOT = {
	OR = {
		ROOT = { 
			NOT = { has_tech = early_bomber} #33
		}
		AND = {
			OR = {
				has_tech = tech_douglas_b18_equipment_1 #usa
				has_tech = tech_he_111_bomber_equipment_2 #ger
				has_tech = tech_br20_bomber_equipment_1 #ita
				has_tech = tech_bloch_210_bomber_equipment_1 #fra
				has_tech = tech_vickers_wellesley_equipment_1 #Eng
			}
			ROOT = { 
				NOT = { has_tech = tactical_bomber1} #36
			}
		}
		AND = {
			OR = {
				has_tech = tech_martin_b26_equipment_1 #usa
				has_tech = tech_he_111_h_bomber_equipment_1 #ger
				has_tech = tech_br20m_bomber_equipment_1 #ita
				has_tech = tech_z1018a_bomber_equipment_1 #ita
				has_tech = tech_bristol_beaufort_equipment_1 #Eng
			}
			ROOT = { 
				NOT = { has_tech = tactical_bomber2} #40
			}
		}
		AND = {
			OR = {
				has_tech = tech_martin_b26_equipment_3 #usa
				has_tech = tech_do_317_bomber_equipment_1 #ger
				has_tech = tech_br20bis_bomber_equipment_1 #ita
				has_tech = tech_bz301_bomber_equipment_1 #ita
				has_tech = tech_bristol_buckingham_equipment_1 #eng
			}
			ROOT = { 
				NOT = { has_tech = tactical_bomber3} #44
			}
		}
	}
	NOT = {
		has_war_with = ROOT
	}
}
not_at_war_nor_in_faction_at_war = {
	has_war = no
	if = {
		limit = {
			is_in_faction = yes 
		}
		faction_leader = { 
             has_war = no
		}
	}
}

is_on_same_continent_as_ROOT = {
	has_variable = original_capital
	has_variable = ROOT.original_capital
	if = {
		limit = {
			var:original_capital = { is_on_continent = europe }
		}
		ROOT = { var:original_capital = { is_on_continent = europe } }
	}
	if = {
		limit = {
			var:original_capital = { is_on_continent = asia }
		}
		ROOT = { var:original_capital = { is_on_continent = asia } }
	}
	if = {
		limit = {
			var:original_capital = { is_on_continent = middle_east }
		}
		ROOT = { var:original_capital = { is_on_continent = middle_east } }
	}
	if = {
		limit = {
			var:original_capital = { is_on_continent = africa }
		}
		ROOT = { var:original_capital = { is_on_continent = africa } }
	}
	if = {
		limit = {
			var:original_capital = { is_on_continent = north_america }
		}
		ROOT = { var:original_capital = { is_on_continent = north_america } }
	}
	if = {
		limit = {
			var:original_capital = { is_on_continent = south_america }
		}
		ROOT = { var:original_capital = { is_on_continent = south_america } }
	}
}

set_num_of_owned_civilian_factories = {
	set_temp_variable = { a1 = num_owned_civilian_factories }
}
set_num_of_civilian_factories_for_import = {
	set_temp_variable = { c1 = 0 }
	if = {
		limit = {
			check_variable = { resource_imported@oil > 0 }
		}
		set_temp_variable = { c2 = resource_imported@oil }
		divide_temp_variable = { c2 = global.resource_cost@oil }
		add_to_temp_variable = { c1 = c2 }
	}
	if = {
		limit = {
			check_variable = { resource_imported@rubber > 0 }
		}
		set_temp_variable = { c2 = resource_imported@rubber }
		divide_temp_variable = { c2 = global.resource_cost@rubber }
		add_to_temp_variable = { c1 = c2 }
	}
	if = {
		limit = {
			check_variable = { resource_imported@tungsten > 0 }
		}
		set_temp_variable = { c2 = resource_imported@tungsten }
		divide_temp_variable = { c2 = global.resource_cost@tungsten }
		add_to_temp_variable = { c1 = c2 }
	}
	if = {
		limit = {
			check_variable = { resource_imported@steel > 0 }
		}
		set_temp_variable = { c2 = resource_imported@steel }
		divide_temp_variable = { c2 = global.resource_cost@steel }
		add_to_temp_variable = { c1 = c2 }
	}
	if = {
		limit = {
			check_variable = { resource_imported@aluminium > 0 }
		}
		set_temp_variable = { c2 = resource_imported@aluminium }
		divide_temp_variable = { c2 = global.resource_cost@aluminium }
		add_to_temp_variable = { c1 = c2 }
	}
	if = {
		limit = {
			check_variable = { resource_imported@chromium > 0 }
		}
		set_temp_variable = { c2 = resource_imported@chromium }
		divide_temp_variable = { c2 = global.resource_cost@chromium }
		add_to_temp_variable = { c1 = c2 }
	}
	if = {
		limit = {
			check_variable = { resource_imported@iron > 0 }
		}
		set_temp_variable = { c2 = resource_imported@iron }
		divide_temp_variable = { c2 = global.resource_cost@iron }
		add_to_temp_variable = { c1 = c2 }
	}
	if = {
		limit = {
			check_variable = { resource_imported@coal > 0 }
		}
		set_temp_variable = { c2 = resource_imported@coal }
		divide_temp_variable = { c2 = global.resource_cost@coal }
		add_to_temp_variable = { c1 = c2 }
	}
	if = {
		limit = {
			check_variable = { resource_imported@bauxite > 0 }
		}
		set_temp_variable = { c2 = resource_imported@bauxite }
		divide_temp_variable = { c2 = global.resource_cost@bauxite }
		add_to_temp_variable = { c1 = c2 }
	}
	if = {
		limit = {
			check_variable = { resource_imported@food > 0 }
		}
		set_temp_variable = { c2 = resource_imported@food }
		divide_temp_variable = { c2 = global.resource_cost@food }
		add_to_temp_variable = { c1 = c2 }
	}
	round_temp_variable = c1
}
set_num_of_civilian_factories_from_export = {

	set_num_of_civilian_factories_for_master = yes #e1
	set_num_of_civilian_factories_for_import = yes #c1
	set_num_of_civilian_factories_from_subject = yes #d1
	set_num_of_owned_civilian_factories = yes #a1
	
	
	#log = "[?a1] num_of_owned_civilian_factories"
	#log = "[?c1] num_of_civilian_factories_for_import"
	#log = "[?d1] num_of_civilian_factories_from_subject"
	
	subtract_from_temp_variable = { a1 = c1 }
	add_to_temp_variable = { a1 = d1 }
	subtract_from_temp_variable = { a1 = e1 } 
	
	set_temp_variable = { b1 = num_of_civilian_factories }
	subtract_from_temp_variable = { b1 = a1 }
	clamp_temp_variable = { var = b1 min = 0 }
	#log = "[?b1] EXPORT"
	
}
set_num_of_civilian_factories_from_subject = {
	set_temp_variable = { d1 = 0 }

	if = {
		limit = {
			check_variable = { subjects^num > 0 }
		}
		all_of_scopes = {
			array = subjects
			 
			set_temp_variable = { cic_to_master = 0 }
			if = {
				limit = {
					OR = {
						has_autonomy_state = autonomy_major_warlord
						has_autonomy_state = autonomy_wtt_imperial_subject
					}
				}
				set_temp_variable = { cic_to_master = 0.1 }
			}
			else_if = {
				limit = {
					has_autonomy_state = autonomy_warlord
				}
				set_temp_variable = { cic_to_master = 0.15 }
			}
			else_if = {
				limit = {
					OR = {
						has_autonomy_state = autonomy_integrated_puppet
						has_autonomy_state = autonomy_minor_warlord
						has_autonomy_state = autonomy_reichskommissariat
						has_autonomy_state = autonomy_wtt_imperial_associate
						has_autonomy_state = autonomy_wtt_imperial_protectorate
					}
				}
				set_temp_variable = { cic_to_master = 0.25 }
			}
			else_if = {
				limit = {
					has_autonomy_state = autonomy_reichsprotectorate
				}
				set_temp_variable = { cic_to_master = 0.5 }
			}
			else_if = {
				limit = {
					has_autonomy_state = autonomy_collaboration_government
				}
				set_temp_variable = { cic_to_master = 0.75 }
			}
			
			
			if = {
				limit = {
					check_variable = { cic_to_master > 0 }
				}
					
				set_num_of_owned_civilian_factories = yes 
		
				set_temp_variable = { d2 = a1 }
				multiply_temp_variable = { d2 = cic_to_master }
				add_to_temp_variable = { d1 = d2 }
			}
		}
		round_temp_variable = d1
	}
}
set_num_of_civilian_factories_for_master = {
	set_temp_variable = { e1 = 0 }
	set_temp_variable = { cic_to_master = 0 }

	if = {
		limit = {
			is_subject = yes
		}
		if = {
			limit = {
				OR = {
					has_autonomy_state = autonomy_major_warlord
					has_autonomy_state = autonomy_wtt_imperial_subject
				}
			}
			set_temp_variable = { cic_to_master = 0.1 }
		}
		else_if = {
			limit = {
				has_autonomy_state = autonomy_warlord
			}
			set_temp_variable = { cic_to_master = 0.15 }
		}
		else_if = {
			limit = {
				OR = {
					has_autonomy_state = autonomy_integrated_puppet
					has_autonomy_state = autonomy_minor_warlord
					has_autonomy_state = autonomy_reichskommissariat
					has_autonomy_state = autonomy_wtt_imperial_associate
					has_autonomy_state = autonomy_wtt_imperial_protectorate
				}
			}
			set_temp_variable = { cic_to_master = 0.25 }
		}
		else_if = {
			limit = {
				has_autonomy_state = autonomy_reichsprotectorate
			}
			set_temp_variable = { cic_to_master = 0.5 }
		}
		else_if = {
			limit = {
				has_autonomy_state = autonomy_collaboration_government
			}
			set_temp_variable = { cic_to_master = 0.75 }
		}
		
		
		if = {
			limit = {
				check_variable = { cic_to_master > 0 }
			}
				
			set_num_of_owned_civilian_factories = yes 

			set_temp_variable = { e2 = a1 }
			multiply_temp_variable = { e2 = cic_to_master }
			add_to_temp_variable = { e1 = e2 }
		}
		round_temp_variable = e1
	}
}

get_target_conscription = {
	#conscription_ratio > 0.731
	
	set_temp_variable = { target = 0 }

	set_temp_variable = { temp = 1024}
	add_to_temp_variable = { temp = target}
	if = { 
		limit = { 
			set_temp_variable = { precision = temp }
			multiply_temp_variable = { precision = 0.001 }
			meta_trigger = {
				text = {
					conscription_ratio > [X]
				}
				X = "[?precision]"
			}
		}
		add_to_temp_variable = { target = 1024 }
	} 

	set_temp_variable = { temp = 512}
	add_to_temp_variable = { temp = target}
	if = { 
		limit = { 
			set_temp_variable = { precision = temp }
			multiply_temp_variable = { precision = 0.001 }
			meta_trigger = {
				text = {
					conscription_ratio > [X]
				}
				X = "[?precision]"
			}
		}
		add_to_temp_variable = { target = 512 }
	} 
	
	set_temp_variable = { temp = 256}
	add_to_temp_variable = { temp = target}
	if = { 
		limit = { 
			set_temp_variable = { precision = temp }
			multiply_temp_variable = { precision = 0.001 }
			meta_trigger = {
				text = {
					conscription_ratio > [X]
				}
				X = "[?precision]"
			}
		}
		add_to_temp_variable = { target = 256 }
	} 
	
	set_temp_variable = { temp = 128}
	add_to_temp_variable = { temp = target}
	if = { 
		limit = { 
			set_temp_variable = { precision = temp }
			multiply_temp_variable = { precision = 0.001 }
			meta_trigger = {
				text = {
					conscription_ratio > [X]
				}
				X = "[?precision]"
			}
		}
		add_to_temp_variable = { target = 128 }
	} 
	
	set_temp_variable = { temp = 64}
	add_to_temp_variable = { temp = target}
	if = { 
		limit = { 
			set_temp_variable = { precision = temp }
			multiply_temp_variable = { precision = 0.001 }
			meta_trigger = {
				text = {
					conscription_ratio > [X]
				}
				X = "[?precision]"
			}
		}
		add_to_temp_variable = { target = 64 }
	} 
	
	set_temp_variable = { temp = 32}
	add_to_temp_variable = { temp = target}
	if = { 
		limit = { 
			set_temp_variable = { precision = temp }
			multiply_temp_variable = { precision = 0.001 }
			meta_trigger = {
				text = {
					conscription_ratio > [X]
				}
				X = "[?precision]"
			}
		}
		add_to_temp_variable = { target = 32 }
	} 
	
	set_temp_variable = { temp = 16}
	add_to_temp_variable = { temp = target}
	if = { 
		limit = { 
			set_temp_variable = { precision = temp }
			multiply_temp_variable = { precision = 0.001 }
			meta_trigger = {
				text = {
					conscription_ratio > [X]
				}
				X = "[?precision]"
			}
		}
		add_to_temp_variable = { target = 16 }
	} 
	
	set_temp_variable = { temp = 8}
	add_to_temp_variable = { temp = target}
	if = { 
		limit = { 
			set_temp_variable = { precision = temp }
			multiply_temp_variable = { precision = 0.001 }
			meta_trigger = {
				text = {
					conscription_ratio > [X]
				}
				X = "[?precision]"
			}
		}
		add_to_temp_variable = { target = 8 }
	} 
	
	set_temp_variable = { temp = 4}
	add_to_temp_variable = { temp = target}
	if = { 
		limit = { 
			set_temp_variable = { precision = temp }
			multiply_temp_variable = { precision = 0.001 }
			meta_trigger = {
				text = {
					conscription_ratio > [X]
				}
				X = "[?precision]"
			}
		}
		add_to_temp_variable = { target = 4 }
	} 
	
	set_temp_variable = { temp = 2}
	add_to_temp_variable = { temp = target}
	if = { 
		limit = { 
			set_temp_variable = { precision = temp }
			multiply_temp_variable = { precision = 0.001 }
			meta_trigger = {
				text = {
					conscription_ratio > [X]
				}
				X = "[?precision]"
			}
		}
		add_to_temp_variable = { target = 2 }
	} 
	
	set_temp_variable = { temp = 1}
	add_to_temp_variable = { temp = target}
	if = { 
		limit = { 
			set_temp_variable = { precision = temp }
			multiply_temp_variable = { precision = 0.001 }
			meta_trigger = {
				text = {
					conscription_ratio > [X]
				}
				X = "[?precision]"
			}
		}
		add_to_temp_variable = { target = 1 }
	} 
	
	set_temp_variable = { mobilization_ratio = target }
	divide_temp_variable = { mobilization_ratio = 1000 }
  
	##log = "[?target|3] RATIO"
	#log = "[?mobilization_ratio|3] RATIO"
  
}